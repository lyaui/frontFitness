{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/thread-loader/dist/cjs.js!/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js!/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangpei-yu/Front-Gym/src/views/backend/CoursesAdmin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/views/backend/CoursesAdmin.vue","mtime":1584965807537},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Pagination from '@/components/Pagination';\nexport default {\n  name: 'CoursesAdmin',\n  components: {\n    Pagination: Pagination\n  },\n  computed: {\n    isLoading: function isLoading() {\n      return this.$store.state.isLoading;\n    },\n    textCounter: function textCounter() {\n      return this.course.title;\n    },\n    courses: function courses() {\n      return this.$store.state.courses.courses;\n    }\n  },\n  methods: {\n    deleteCourse: function deleteCourse(title, id) {\n      var _this = this;\n\n      this.$modal.show('dialog', {\n        title: \"\\u26A0\\uFE0F \\u78BA\\u5B9A\\u522A\\u9664 \".concat(title, \" \\u55CE\\uFF1F\"),\n        text: '課程一旦刪除將無法復原 😱😱😱',\n        buttons: [{\n          title: '確定',\n          handler: function handler() {\n            _this.$store.dispatch('courses/removeCourse', id).then(function () {\n              _this.$toasted.success(\"\\u6210\\u529F\\u522A\\u9664 \".concat(title), {\n                duration: 2000\n              });\n\n              _this.$modal.hide('dialog');\n            });\n          }\n        }, {\n          title: '取消'\n        }]\n      });\n    },\n    addCourse: function addCourse() {\n      var _this2 = this;\n\n      this.$store.dispatch('courses/createCourse', _objectSpread({}, this.course)).then(function () {\n        _this2.$toasted.success('成功新增課程', {\n          duration: 2000\n        });\n      });\n    },\n    updateCourse: function updateCourse(id) {\n      var _this3 = this;\n\n      this.$store.dispatch('courses/updateCourse', {\n        id: id,\n        course: this.course\n      }).then(function () {\n        _this3.$toasted.success('更新成功!!', {\n          duration: 2000\n        });\n      });\n    },\n    // 編輯/新增課程\n    turnNewEditPage: function turnNewEditPage(status, course) {\n      this.$store.commit('courses/setStatus', status);\n\n      if (status === '編輯課程') {\n        this.$store.commit('courses/setCourse', course);\n      } else {\n        this.$store.commit('courses/setCourse', {});\n      }\n\n      this.$router.push({\n        name: 'courseNewEdit'\n      });\n    }\n  },\n  created: function created() {\n    this.$store.dispatch('courses/getCoursesLimit');\n    this.$store.dispatch('courses/getPageLength');\n  }\n};",{"version":3,"sources":["CoursesAdmin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA,OAAA,UAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA;AACA;AATA,GAHA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA,EADA,EACA;AAAA;;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,QAAA,KAAA,kDAAA,KAAA,kBADA;AAEA,QAAA,IAAA,EAAA,oBAFA;AAGA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,mBAAA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,EAAA,EAAA,IAAA,CAAA,YAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,OAAA,oCAAA,KAAA,GAAA;AACA,gBAAA,QAAA,EAAA;AADA,eAAA;;AAGA,cAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA,aALA;AAMA;AATA,SADA,EAYA;AACA,UAAA,KAAA,EAAA;AADA,SAZA;AAHA,OAAA;AAoBA,KAtBA;AAwBA,IAAA,SAxBA,uBAwBA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,sBADA,oBACA,KAAA,MADA,GAEA,IAFA,CAEA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA;AADA,SAAA;AAGA,OANA;AAOA,KAhCA;AAkCA,IAAA,YAlCA,wBAkCA,EAlCA,EAkCA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,sBADA,EACA;AAAA,QAAA,EAAA,EAAA,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,OADA,EAEA,IAFA,CAEA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA;AADA,SAAA;AAGA,OANA;AAOA,KA1CA;AA2CA;AACA,IAAA,eA5CA,2BA4CA,MA5CA,EA4CA,MA5CA,EA4CA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,MAAA;;AACA,UAAA,MAAA,KAAA,MAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,EAAA;AACA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA;AApDA,GAdA;AAqEA,EAAA,OArEA,qBAqEA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,yBAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,uBAAA;AACA;AAxEA,CAAA","sourcesContent":["<template>\n  <div>\n    <loading\n      :active.sync=\"isLoading\"\n      :opacity=\"0.8\"\n      :background-color=\"'#000'\"\n      :color=\"'#ff5722'\"\n    ></loading>\n    <h2 class=\"heading-secondary\">課程列表</h2>\n    <button @click=\"turnNewEditPage('新增課程')\" class=\"btn admin-btn\">\n      <i class=\"fas fa-plus-square\"></i> 新增課程\n    </button>\n\n    <table class=\"admin-table\">\n      <thead>\n        <tr>\n          <th class=\"d-none-phone\">圖示</th>\n          <th class=\"d-none-phone\">類別</th>\n          <th>課程名稱</th>\n          <th class=\"d-none-phone\">精選</th>\n          <th>剩餘數量</th>\n          <th class=\"d-none-tab-p\">原價</th>\n          <th>售價</th>\n          <th>編輯</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr\n          v-for=\"(course, index) in courses\"\n          :class=\"{ 'lighten-row': index % 2 == 1 }\"\n          :key=\"course.id\"\n        >\n          <td class=\"d-none-phone\">\n            <img\n              class=\"course-admin__img\"\n              :src=\"course.imageUrl\"\n              :alt=\"course.title\"\n            />\n          </td>\n          <td class=\"d-none-phone\">{{ course.categorySelected }}</td>\n          <td style=\"text-align:left;padding-left:20px\">\n            <router-link\n              :to=\"{ name: 'CourseDetails', params: { course_id: course.id } }\"\n              >{{ course.title }}</router-link\n            >\n          </td>\n\n          <td class=\"d-none-phone\">\n            <div v-if=\"course.discount\">V</div>\n            <div v-else>-</div>\n          </td>\n\n          <td :class=\"{ 'text-highlight': course.remainQuantity === 0 }\">\n            {{ course.remainQuantity }}/{{ course.quantity }}\n          </td>\n          <td class=\"d-none-tab-p\">{{ course.originPrice | currency }}</td>\n          <td>{{ course.price | currency }}</td>\n          <td>\n            <button\n              @click=\"turnNewEditPage('編輯課程', course)\"\n              class=\"btn admin-btn\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button\n              class=\"btn admin-btn\"\n              @click=\"deleteCourse(course.title, course.id)\"\n            >\n              <i class=\"fas fa-trash-alt\"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <Pagination></Pagination>\n    <v-dialog />\n  </div>\n</template>\n\n<script>\nimport Pagination from '@/components/Pagination';\n\nexport default {\n  name: 'CoursesAdmin',\n  components: { Pagination },\n  computed: {\n    isLoading() {\n      return this.$store.state.isLoading;\n    },\n    textCounter() {\n      return this.course.title;\n    },\n    courses() {\n      return this.$store.state.courses.courses;\n    },\n  },\n  methods: {\n    deleteCourse(title, id) {\n      this.$modal.show('dialog', {\n        title: `⚠️ 確定刪除 ${title} 嗎？`,\n        text: '課程一旦刪除將無法復原 😱😱😱',\n        buttons: [\n          {\n            title: '確定',\n            handler: () => {\n              this.$store.dispatch('courses/removeCourse', id).then(() => {\n                this.$toasted.success(`成功刪除 ${title}`, {\n                  duration: 2000,\n                });\n                this.$modal.hide('dialog');\n              });\n            },\n          },\n          {\n            title: '取消',\n          },\n        ],\n      });\n    },\n\n    addCourse() {\n      this.$store\n        .dispatch('courses/createCourse', { ...this.course })\n        .then(() => {\n          this.$toasted.success('成功新增課程', {\n            duration: 2000,\n          });\n        });\n    },\n\n    updateCourse(id) {\n      this.$store\n        .dispatch('courses/updateCourse', { id, course: this.course })\n        .then(() => {\n          this.$toasted.success('更新成功!!', {\n            duration: 2000,\n          });\n        });\n    },\n    // 編輯/新增課程\n    turnNewEditPage(status, course) {\n      this.$store.commit('courses/setStatus', status);\n      if (status === '編輯課程') {\n        this.$store.commit('courses/setCourse', course);\n      } else {\n        this.$store.commit('courses/setCourse', {});\n      }\n      this.$router.push({ name: 'courseNewEdit' });\n    },\n  },\n\n  created() {\n    this.$store.dispatch('courses/getCoursesLimit');\n    this.$store.dispatch('courses/getPageLength');\n  },\n};\n</script>\n\n<style>\n#editor {\n  height: 250px;\n}\n</style>\n"],"sourceRoot":"src/views/backend"}]}