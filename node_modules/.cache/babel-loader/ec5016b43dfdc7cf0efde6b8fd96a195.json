{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js!/Users/huangpei-yu/Front-Gym/src/store/courses.js","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/store/courses.js","mtime":1584968923066},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _toConsumableArray from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { db } from '@/firebase/init';\nimport Vue from 'vue';\nexport default {\n  namespaced: true,\n  state: function state() {\n    return {\n      cat: '所有課程',\n      status: '',\n      course: {},\n      courses: [],\n      coach: {},\n      pagination: {\n        totalLength: null,\n        itemCount: 7,\n        lastItem: null,\n        previousFirstItems: []\n      }\n    };\n  },\n  getters: {\n    currentPage: function currentPage(state) {\n      if (!state.pagination.previousFirstItems) {\n        return 1;\n      }\n\n      return state.pagination.previousFirstItems.length;\n    }\n  },\n  actions: {\n    getPageLength: function getPageLength(_ref) {\n      var commit = _ref.commit;\n      db.collection('courses').get().then(function (snapshots) {\n        commit('setLength', snapshots.size);\n      });\n    },\n    // 獲得全部課程\n    getCourses: function getCourses(_ref2, cat) {\n      var commit = _ref2.commit;\n      commit('loading', true, {\n        root: true\n      });\n      commit('setCourses', []);\n      var query; // 無分類的情況\n\n      if (cat === '所有課程') {\n        query = db.collection('courses').get();\n      } else {\n        // 分類的情況\n        query = db.collection('courses').where('categorySelected', '==', cat).get();\n      }\n\n      return query.then(function (snapshots) {\n        var courses = snapshots.docs.map(function (snapshot) {\n          return _objectSpread({}, snapshot.data(), {\n            id: snapshot.id\n          });\n        });\n        commit('setCat', cat);\n        commit('setCourses', courses);\n        commit('loading', false, {\n          root: true\n        });\n        return courses;\n      });\n    },\n    // 獲得特定課程\n    getCourseById: function getCourseById(_ref3, courseId) {\n      var commit = _ref3.commit;\n      commit('loading', true, {\n        root: true\n      });\n      commit('setCourse', {});\n      db.collection('courses').doc(courseId).get().then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(snapshot) {\n          var course;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  course = snapshot.data();\n                  course.id = snapshot.id; // 獲取教練的資料\n\n                  _context.next = 4;\n                  return db.collection('coaches').where('name', '==', course.coach).get().then(function (snapshots) {\n                    // where會回傳陣列，但搜尋的姓名為唯一值，因此選第0項\n                    var coach = snapshots.docs.map(function (coachProfile) {\n                      return _objectSpread({}, coachProfile.data());\n                    });\n                    commit.apply(void 0, ['setCoach'].concat(_toConsumableArray(coach)));\n                  });\n\n                case 4:\n                  commit('setCourse', course);\n                  commit('loading', false, {\n                    root: true\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    },\n    // 獲得分頁課程\n    getCoursesLimit: function getCoursesLimit(_ref5) {\n      var commit = _ref5.commit,\n          state = _ref5.state;\n      commit('loading', true, {\n        root: true\n      });\n      commit('setCourses', []);\n      commit('clearPreviousFirstItem');\n      return db.collection('courses').orderBy('categorySelected', 'desc').limit(state.pagination.itemCount).get().then(function (snapshots) {\n        var courses = snapshots.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        });\n        commit('setCourses', courses);\n        commit('setLastItem', snapshots.docs[snapshots.docs.length - 1]);\n        commit('setPreviousFirstItem', snapshots.docs[0]);\n        commit('loading', false, {\n          root: true\n        });\n        return courses;\n      });\n    },\n    // 下一頁/上一頁\n    getMoreCourses: function getMoreCourses(_ref6, page) {\n      var commit = _ref6.commit,\n          state = _ref6.state;\n      commit('loading', true, {\n        root: true\n      });\n      var query; // 下一頁\n\n      if (page === 'next') {\n        query = db.collection('courses').orderBy('categorySelected', 'desc').startAfter(state.pagination.lastItem).limit(state.pagination.itemCount);\n      } else {\n        // 前一頁\n        var lastItemIndex = state.pagination.previousFirstItems.length - 1;\n        var previousItem = state.pagination.previousFirstItems[lastItemIndex - 1];\n\n        if (!previousItem) {\n          return;\n        }\n\n        state.pagination.previousFirstItems.splice(lastItemIndex, 1);\n        query = db.collection('courses').orderBy('categorySelected', 'desc').startAt(previousItem).limit(state.pagination.itemCount);\n      } // eslint-disable-next-line consistent-return\n\n\n      return query.get().then(function (snapshots) {\n        if (snapshots.docs.length === 0) {\n          return [];\n        }\n\n        var courses = snapshots.docs.map(function (doc) {\n          return _objectSpread({}, doc.data(), {\n            id: doc.id\n          });\n        });\n        commit('setCourses', courses);\n        commit('setLastItem', snapshots.docs[snapshots.docs.length - 1]);\n\n        if (page === 'next') {\n          commit('setPreviousFirstItem', snapshots.docs[0]);\n        }\n\n        commit('loading', false, {\n          root: true\n        });\n        return courses;\n      });\n    },\n    // 創建新課程\n    createCourse: function createCourse(_, course) {\n      db.collection('courses').add(course).catch(function (err) {\n        return err;\n      });\n    },\n    // 移除課程\n    removeCourse: function removeCourse(_ref7, id) {\n      var commit = _ref7.commit;\n      return db.collection('courses').doc(id).delete().then(function () {\n        commit('setCourseDelete', id);\n      });\n    },\n    // 更新課程\n    updateCourse: function updateCourse(_ref8, _ref9) {\n      var commit = _ref8.commit;\n      var id = _ref9.id,\n          course = _ref9.course;\n\n      if (course && id) {\n        db.collection('courses').doc(id).update(course).then(function () {\n          commit('setCurCourse', {\n            id: id,\n            course: course\n          });\n          commit('setCurCourseComment', course);\n        });\n      }\n    }\n  },\n  mutations: {\n    // 儲存分類\n    setCat: function setCat(state, cat) {\n      state.cat = cat;\n    },\n    // 儲存全部課程\n    setCourses: function setCourses(state, courses) {\n      state.courses = courses;\n    },\n    // 儲存單一課程\n    setCourse: function setCourse(state, course) {\n      state.course = course;\n    },\n    // 儲存教練\n    setCoach: function setCoach(state, coach) {\n      state.coach = coach;\n    },\n    // 即時更新畫面（編輯課程）\n    setCurCourse: function setCurCourse(state, _ref10) {\n      var id = _ref10.id,\n          course = _ref10.course;\n      // Vue.set(state.object, key, value) or Vue.set(object, prop, value)\n      var index = state.courses.findIndex(function (item) {\n        return item.id === id;\n      });\n      Vue.set(state.courses, index, course);\n    },\n    // 即時更新畫面（移除課程）\n    setCourseDelete: function setCourseDelete(state, id) {\n      state.courses = state.courses.filter(function (course) {\n        return course.id !== id;\n      });\n    },\n    // 即時更新（新增評價）\n    setCurCourseComment: function setCurCourseComment(state, course) {\n      Vue.set(state.course, 'avgRating', course.avgRating);\n    },\n    setLastItem: function setLastItem(state, course) {\n      state.pagination.lastItem = course;\n    },\n    setPreviousFirstItem: function setPreviousFirstItem(state, course) {\n      state.pagination.previousFirstItems.push(course);\n    },\n    clearPreviousFirstItem: function clearPreviousFirstItem(state) {\n      state.pagination.previousFirstItems = [];\n    },\n    setLength: function setLength(state, length) {\n      var totalPage = length / state.pagination.itemCount;\n\n      if (length % state.pagination.itemCount === 0) {\n        state.pagination.totalLength = totalPage;\n      } else {\n        state.pagination.totalLength = Math.ceil(totalPage);\n      }\n    },\n    setStatus: function setStatus(state, status) {\n      state.status = status;\n    }\n  }\n};",{"version":3,"sources":["/Users/huangpei-yu/Front-Gym/src/store/courses.js"],"names":["db","Vue","namespaced","state","cat","status","course","courses","coach","pagination","totalLength","itemCount","lastItem","previousFirstItems","getters","currentPage","length","actions","getPageLength","commit","collection","get","then","snapshots","size","getCourses","root","query","where","docs","map","snapshot","data","id","getCourseById","courseId","doc","coachProfile","getCoursesLimit","orderBy","limit","getMoreCourses","page","startAfter","lastItemIndex","previousItem","splice","startAt","createCourse","_","add","catch","err","removeCourse","delete","updateCourse","update","mutations","setCat","setCourses","setCourse","setCoach","setCurCourse","index","findIndex","item","set","setCourseDelete","filter","setCurCourseComment","avgRating","setLastItem","setPreviousFirstItem","push","clearPreviousFirstItem","setLength","totalPage","Math","ceil","setStatus"],"mappings":"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","sourcesContent":["import { db } from '@/firebase/init';\nimport Vue from 'vue';\n\nexport default {\n  namespaced: true,\n  state() {\n    return {\n      cat: '所有課程',\n      status: '',\n      course: {},\n      courses: [],\n      coach: {},\n      pagination: {\n        totalLength: null,\n        itemCount: 7,\n        lastItem: null,\n        previousFirstItems: [],\n      },\n    };\n  },\n  getters: {\n    currentPage(state) {\n      if (!state.pagination.previousFirstItems) {\n        return 1;\n      }\n      return state.pagination.previousFirstItems.length;\n    },\n  },\n  actions: {\n    getPageLength({ commit }) {\n      db.collection('courses')\n        .get()\n        .then((snapshots) => {\n          commit('setLength', snapshots.size);\n        });\n    },\n\n    // 獲得全部課程\n    getCourses({ commit }, cat) {\n      commit('loading', true, {\n        root: true,\n      });\n      commit('setCourses', []);\n      let query;\n      // 無分類的情況\n      if (cat === '所有課程') {\n        query = db.collection('courses').get();\n      } else {\n        // 分類的情況\n        query = db\n          .collection('courses')\n          .where('categorySelected', '==', cat)\n          .get();\n      }\n      return query.then((snapshots) => {\n        const courses = snapshots.docs.map((snapshot) => ({\n          ...snapshot.data(),\n          id: snapshot.id,\n        }));\n        commit('setCat', cat);\n        commit('setCourses', courses);\n        commit('loading', false, {\n          root: true,\n        });\n        return courses;\n      });\n    },\n\n    // 獲得特定課程\n    getCourseById({ commit }, courseId) {\n      commit('loading', true, {\n        root: true,\n      });\n      commit('setCourse', {});\n      db.collection('courses')\n        .doc(courseId)\n        .get()\n        .then(async (snapshot) => {\n          const course = snapshot.data();\n          course.id = snapshot.id;\n\n          // 獲取教練的資料\n          await db\n            .collection('coaches')\n            .where('name', '==', course.coach)\n            .get()\n            .then((snapshots) => {\n              // where會回傳陣列，但搜尋的姓名為唯一值，因此選第0項\n              const coach = snapshots.docs.map((coachProfile) => ({\n                ...coachProfile.data(),\n              }));\n              commit('setCoach', ...coach);\n            });\n\n          commit('setCourse', course);\n          commit('loading', false, {\n            root: true,\n          });\n        });\n    },\n\n    // 獲得分頁課程\n    getCoursesLimit({ commit, state }) {\n      commit('loading', true, {\n        root: true,\n      });\n      commit('setCourses', []);\n      commit('clearPreviousFirstItem');\n\n      return db\n        .collection('courses')\n        .orderBy('categorySelected', 'desc')\n        .limit(state.pagination.itemCount)\n        .get()\n        .then((snapshots) => {\n          const courses = snapshots.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n          commit('setCourses', courses);\n          commit('setLastItem', snapshots.docs[snapshots.docs.length - 1]);\n          commit('setPreviousFirstItem', snapshots.docs[0]);\n          commit('loading', false, {\n            root: true,\n          });\n          return courses;\n        });\n    },\n\n    // 下一頁/上一頁\n    getMoreCourses({ commit, state }, page) {\n      commit('loading', true, {\n        root: true,\n      });\n      let query;\n\n      // 下一頁\n      if (page === 'next') {\n        query = db\n          .collection('courses')\n          .orderBy('categorySelected', 'desc')\n          .startAfter(state.pagination.lastItem)\n\n          .limit(state.pagination.itemCount);\n      } else {\n        // 前一頁\n        const lastItemIndex = state.pagination.previousFirstItems.length - 1;\n        const previousItem = state.pagination.previousFirstItems[lastItemIndex - 1];\n\n        if (!previousItem) {\n          return;\n        }\n\n        state.pagination.previousFirstItems.splice(lastItemIndex, 1);\n        query = db\n          .collection('courses')\n          .orderBy('categorySelected', 'desc')\n          .startAt(previousItem)\n          .limit(state.pagination.itemCount);\n      }\n\n      // eslint-disable-next-line consistent-return\n      return query.get().then((snapshots) => {\n        if (snapshots.docs.length === 0) {\n          return [];\n        }\n        const courses = snapshots.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }));\n        commit('setCourses', courses);\n        commit('setLastItem', snapshots.docs[snapshots.docs.length - 1]);\n        if (page === 'next') {\n          commit('setPreviousFirstItem', snapshots.docs[0]);\n        }\n        commit('loading', false, {\n          root: true,\n        });\n        return courses;\n      });\n    },\n\n    // 創建新課程\n    createCourse(_, course) {\n      db.collection('courses')\n        .add(course)\n        .catch((err) => err);\n    },\n\n    // 移除課程\n    removeCourse({ commit }, id) {\n      return db\n        .collection('courses')\n        .doc(id)\n        .delete()\n        .then(() => {\n          commit('setCourseDelete', id);\n        });\n    },\n\n    // 更新課程\n    updateCourse({ commit }, { id, course }) {\n      if (course && id) {\n        db.collection('courses')\n          .doc(id)\n          .update(course)\n          .then(() => {\n            commit('setCurCourse', { id, course });\n            commit('setCurCourseComment', course);\n          });\n      }\n    },\n  },\n  mutations: {\n    // 儲存分類\n    setCat(state, cat) {\n      state.cat = cat;\n    },\n    // 儲存全部課程\n    setCourses(state, courses) {\n      state.courses = courses;\n    },\n\n    // 儲存單一課程\n    setCourse(state, course) {\n      state.course = course;\n    },\n\n    // 儲存教練\n    setCoach(state, coach) {\n      state.coach = coach;\n    },\n\n    // 即時更新畫面（編輯課程）\n    setCurCourse(state, { id, course }) {\n      // Vue.set(state.object, key, value) or Vue.set(object, prop, value)\n      const index = state.courses.findIndex((item) => item.id === id);\n      Vue.set(state.courses, index, course);\n    },\n\n    // 即時更新畫面（移除課程）\n\n    setCourseDelete(state, id) {\n      state.courses = state.courses.filter((course) => course.id !== id);\n    },\n\n    // 即時更新（新增評價）\n    setCurCourseComment(state, course) {\n      Vue.set(state.course, 'avgRating', course.avgRating);\n    },\n\n    setLastItem(state, course) {\n      state.pagination.lastItem = course;\n    },\n    setPreviousFirstItem(state, course) {\n      state.pagination.previousFirstItems.push(course);\n    },\n    clearPreviousFirstItem(state) {\n      state.pagination.previousFirstItems = [];\n    },\n    setLength(state, length) {\n      const totalPage = length / state.pagination.itemCount;\n      if (length % state.pagination.itemCount === 0) {\n        state.pagination.totalLength = totalPage;\n      } else {\n        state.pagination.totalLength = Math.ceil(totalPage);\n      }\n    },\n    setStatus(state, status) {\n      state.status = status;\n    },\n  },\n};\n"]}]}