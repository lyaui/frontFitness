{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js!/Users/huangpei-yu/Front-Gym/src/store/auth.js","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/store/auth.js","mtime":1584522532757},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { db } from \"@/firebase/init\";\nimport fb from 'firebase/app';\nimport 'firebase/auth';\nexport default {\n  namespaced: true,\n  state: function state() {\n    return {\n      user: null\n    };\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return state.user;\n    }\n  },\n  actions: {\n    //註冊\n    signUp: function signUp(_, _ref) {\n      var email = _ref.email,\n          password = _ref.password;\n      return fb.auth().createUserWithEmailAndPassword(email, password).then(function (_ref2) {\n        var user = _ref2.user;\n        return user;\n      }).catch(function (error) {\n        var message;\n\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n            message = '帳號已存在 請嘗試其他電子信箱';\n            break;\n\n          case \"auth/invalid-email\":\n            message = '不符規定的格式 請嘗試其他電子信箱';\n            break;\n\n          case \"auth/weak-password\":\n            message = \"密碼強度太弱 請嘗試新的密碼組合\";\n            break;\n\n          default:\n            message = \"註冊失敗 請重新嘗試\";\n        }\n\n        return Promise.reject(message);\n      });\n    },\n    //登入\n    signIn: function signIn(_, _ref3) {\n      var email = _ref3.email,\n          password = _ref3.password;\n      return fb.auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n        var message = error.code === 'auth/user-not-found' ? \"無使用者 請再確認帳號\" : \"密碼錯誤 請再重試\";\n        return Promise.reject(message);\n      });\n    },\n    //登出\n    signOut: function signOut(_ref4) {\n      var commit = _ref4.commit;\n      return fb.auth().signOut().then(function () {\n        return commit('setAuthUser', null);\n      });\n    },\n    //建立使用者資料\n    createUserProfile: function createUserProfile(_, _ref5) {\n      var uid = _ref5.uid,\n          userProfile = _ref5.userProfile;\n      return db.collection('users').doc(uid).set(userProfile);\n    },\n    //讀取寫入使用者資料\n    storeAuthUser: function storeAuthUser(_ref6, user) {\n      var commit = _ref6.commit;\n      return db.collection('users').doc(user.uid).get().then(function (snapshot) {\n        var profile = snapshot.data();\n        user.profile = profile;\n        commit('setAuthUser', user);\n        return profile;\n      });\n    },\n    //更新使用者資料\n    updateUser: function updateUser(_ref7, _ref8) {\n      var commit = _ref7.commit;\n      var id = _ref8.id,\n          user = _ref8.user;\n      debugger;\n\n      if (user && id) {\n        db.collection(\"users\").doc(id).update(user).then(function () {\n          commit('changeUserView', user);\n        });\n      }\n    }\n  },\n  mutations: {\n    setAuthUser: function setAuthUser(state, user) {\n      state.user = user;\n    },\n    changeUserView: function changeUserView(state, user) {\n      state.user.profile.name = user.name;\n      state.user.profile.userImg = user.userImg;\n    }\n  }\n};",{"version":3,"sources":["/Users/huangpei-yu/Front-Gym/src/store/auth.js"],"names":["db","fb","namespaced","state","user","getters","isAuthenticated","actions","signUp","_","email","password","auth","createUserWithEmailAndPassword","then","catch","error","message","code","Promise","reject","signIn","signInWithEmailAndPassword","signOut","commit","createUserProfile","uid","userProfile","collection","doc","set","storeAuthUser","get","snapshot","profile","data","updateUser","id","update","mutations","setAuthUser","changeUserView","name","userImg"],"mappings":"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","sourcesContent":["import {\n    db\n} from \"@/firebase/init\";\nimport fb from 'firebase/app'\nimport 'firebase/auth'\n\n\nexport default {\n    namespaced: true,\n    state() {\n        return {\n            user: null\n        }\n    },\n    getters: {\n        isAuthenticated(state) {\n            return state.user\n        },\n    },\n\n    actions: {\n        //註冊\n        signUp(_, {\n            email,\n            password\n        }) {\n            return fb.auth().createUserWithEmailAndPassword(email, password)\n                .then(({\n                    user\n                }) => {\n                    return user\n                }).catch(error => {\n                    let message;\n                    switch (error.code) {\n                        case \"auth/email-already-in-use\":\n                            message = '帳號已存在 請嘗試其他電子信箱'\n                            break;\n                        case \"auth/invalid-email\":\n                            message = '不符規定的格式 請嘗試其他電子信箱'\n                            break;\n                        case \"auth/weak-password\":\n                            message = \"密碼強度太弱 請嘗試新的密碼組合\"\n                            break;\n                        default:\n                            message = \"註冊失敗 請重新嘗試\"\n                    }\n                    return Promise.reject(message)\n                })\n        },\n\n        //登入\n        signIn(_, {\n            email,\n            password\n        }) {\n            return fb.auth().signInWithEmailAndPassword(email, password)\n                .catch(error => {\n                    let message = error.code === 'auth/user-not-found' ?\n                        \"無使用者 請再確認帳號\" :\n                        \"密碼錯誤 請再重試\"\n                    return Promise.reject(message)\n                })\n\n        },\n\n        //登出\n        signOut({\n            commit\n        }) {\n            return fb.auth().signOut()\n                .then(() => commit('setAuthUser', null))\n        },\n\n        //建立使用者資料\n        createUserProfile(_, {\n            uid,\n            userProfile\n        }) {\n            return db\n                .collection('users')\n                .doc(uid)\n                .set(userProfile)\n        },\n\n        //讀取寫入使用者資料\n        storeAuthUser({\n            commit\n        }, user) {\n            return db.collection('users')\n                .doc(user.uid)\n                .get()\n                .then(snapshot => {\n                    const profile = snapshot.data()\n                    user.profile = profile;\n                    commit('setAuthUser', user)\n                    return profile\n                })\n        },\n\n        //更新使用者資料\n        updateUser({\n            commit\n        }, {\n            id,\n            user\n        }) {\n            debugger\n            if (user && id) {\n                db.collection(\"users\")\n                    .doc(id)\n                    .update(user)\n                    .then(() => {\n                        commit('changeUserView', user)\n                    })\n            }\n        }\n    },\n\n    mutations: {\n        setAuthUser(state, user) {\n            state.user = user\n        },\n\n        changeUserView(state, user) {\n            state.user.profile.name = user.name;\n            state.user.profile.userImg = user.userImg\n        }\n    }\n}"]}]}