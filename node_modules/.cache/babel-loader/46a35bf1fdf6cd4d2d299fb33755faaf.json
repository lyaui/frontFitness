{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js!/Users/huangpei-yu/Front-Gym/src/store.js","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/store.js","mtime":1582382378871},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// import Vue from 'vue'\n// import Vuex from 'vuex'\n// import {\n//     db\n// } from \"@/firebase/init\";\n// import createPersistedState from 'vuex-persistedstate'\n// Vue.use(Vuex)\n// let cart = window.localStorage.getItem('cart')\n// export default new Vuex.Store({\n//     plugins: [createPersistedState()],\n//     state: {\n//         categorySelected: \"所有課程\",\n//         // isLoading: true,\n//         courses: [],\n//         coupon: false,\n//         totalOrigin: 0,\n//         discount: 100,\n//         totalDiscount: 0,\n//         total: 0,\n//         cart: cart ? JSON.parse(cart) : [],\n//     },\n//     actions: {\n//         getData() {\n//             db.collection(\"courses\")\n//                 .get()\n//                 .then(snapshot => {\n//                     console.log(snapshot);\n//                 })\n//         }\n//     },\n//     mutations: {\n//         //傳遞路徑\n//         selectCat(state, test) {\n//             state.categorySelected = test\n//             console.log('vuex', state.categorySelected);\n//         },\n//         //加入購物車\n//         addToCart(state, item) {\n//             let found = state.cart.find(course => course.id === item.id);\n//             if (found) {\n//                 alert('課程已在購物車')\n//             } else {\n//                 state.cart.push(item);\n//             }\n//             this.commit('saveData')\n//         },\n//         //保存cart內項目\n//         saveData(state) {\n//             window.localStorage.setItem('cart', JSON.stringify(state.cart))\n//         },\n//         //移除購物車內容\n//         removeItem(state, item) {\n//             let index = state.cart.indexOf(item);\n//             state.cart.splice(index, 1)\n//             this.commit('totalPrice')\n//             this.commit('saveData')\n//         },\n//         // 如果剩餘人數為零則歸0\n//         changeRemains(state, item) {\n//             item.forEach(courseName =>\n//                 state.cart.forEach(course => {\n//                     console.log(item);\n//                     if (course.title === courseName) {\n//                         course.remainQuantity = 0\n//                     }\n//                 })\n//             )\n//         },\n//         //計算總價格\n//         totalPrice(state) {\n//             if (state.cart.length === 0) {\n//                 state.totalOrigin = 0\n//                 state.total = 0\n//                 state.totalDiscount = 0\n//             } else {\n//                 state.totalOrigin = state.cart.map(course => course.price).reduce((total, amount) => total + amount);\n//                 state.total = state.totalOrigin;\n//                 state.totalDiscount = state.cart.filter(course => course.discount).length * state.discount\n//             }\n//         },\n//         //加入購物券計算價格\n//         addCouponCode(state, coupon) {\n//             state.coupon = coupon;\n//             state.coupon ? state.total = state.totalOrigin - state.totalDiscount : state.total = state.totalOrigin\n//         },\n//         //結帳完成清空購物車\n//         checkout(state) {\n//             state.courses = [];\n//             state.coupon = false;\n//             state.totalOrigin = 0;\n//             state.totalDiscount = 0;\n//             state.total = 0;\n//             state.cart = [];\n//         }\n//     },\n// }, )",{"version":3,"sources":["/Users/huangpei-yu/Front-Gym/src/store.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import Vue from 'vue'\n// import Vuex from 'vuex'\n// import {\n//     db\n// } from \"@/firebase/init\";\n// import createPersistedState from 'vuex-persistedstate'\n// Vue.use(Vuex)\n\n// let cart = window.localStorage.getItem('cart')\n\n// export default new Vuex.Store({\n//     plugins: [createPersistedState()],\n//     state: {\n//         categorySelected: \"所有課程\",\n//         // isLoading: true,\n//         courses: [],\n//         coupon: false,\n//         totalOrigin: 0,\n//         discount: 100,\n//         totalDiscount: 0,\n//         total: 0,\n//         cart: cart ? JSON.parse(cart) : [],\n//     },\n//     actions: {\n//         getData() {\n//             db.collection(\"courses\")\n//                 .get()\n//                 .then(snapshot => {\n//                     console.log(snapshot);\n                \n//                 })\n//         }\n\n//     },\n\n//     mutations: {\n//         //傳遞路徑\n//         selectCat(state, test) {\n//             state.categorySelected = test\n//             console.log('vuex', state.categorySelected);\n\n//         },\n\n\n//         //加入購物車\n//         addToCart(state, item) {\n//             let found = state.cart.find(course => course.id === item.id);\n//             if (found) {\n//                 alert('課程已在購物車')\n//             } else {\n//                 state.cart.push(item);\n//             }\n//             this.commit('saveData')\n//         },\n\n//         //保存cart內項目\n//         saveData(state) {\n//             window.localStorage.setItem('cart', JSON.stringify(state.cart))\n//         },\n\n//         //移除購物車內容\n//         removeItem(state, item) {\n//             let index = state.cart.indexOf(item);\n//             state.cart.splice(index, 1)\n//             this.commit('totalPrice')\n//             this.commit('saveData')\n//         },\n\n//         // 如果剩餘人數為零則歸0\n//         changeRemains(state, item) {\n//             item.forEach(courseName =>\n//                 state.cart.forEach(course => {\n//                     console.log(item);\n//                     if (course.title === courseName) {\n//                         course.remainQuantity = 0\n//                     }\n//                 })\n//             )\n//         },\n\n//         //計算總價格\n//         totalPrice(state) {\n//             if (state.cart.length === 0) {\n//                 state.totalOrigin = 0\n//                 state.total = 0\n//                 state.totalDiscount = 0\n//             } else {\n//                 state.totalOrigin = state.cart.map(course => course.price).reduce((total, amount) => total + amount);\n//                 state.total = state.totalOrigin;\n//                 state.totalDiscount = state.cart.filter(course => course.discount).length * state.discount\n//             }\n\n//         },\n\n//         //加入購物券計算價格\n//         addCouponCode(state, coupon) {\n//             state.coupon = coupon;\n//             state.coupon ? state.total = state.totalOrigin - state.totalDiscount : state.total = state.totalOrigin\n//         },\n\n//         //結帳完成清空購物車\n//         checkout(state) {\n//             state.courses = [];\n//             state.coupon = false;\n//             state.totalOrigin = 0;\n//             state.totalDiscount = 0;\n//             state.total = 0;\n//             state.cart = [];\n//         }\n//     },\n// }, )"]}]}