{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/thread-loader/dist/cjs.js!/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js!/Users/huangpei-yu/Front-Gym/src/store.js","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/store.js","mtime":1579940332516},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nVue.use(Vuex);\nvar cart = window.localStorage.getItem('cart');\nexport default new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    categorySelected: \"所有課程\",\n    // isLoading: true,\n    courses: [],\n    coupon: false,\n    totalOrigin: 0,\n    discount: 100,\n    totalDiscount: 0,\n    total: 0,\n    cart: cart ? JSON.parse(cart) : []\n  },\n  actions: {\n    getCourses: function getCourses(state) {\n      db.collection('courses').get().then(function (snapshot) {\n        return snapshot.forEach(function (doc) {\n          return state.courses.push(doc.data());\n        });\n      });\n    }\n  },\n  mutations: {\n    //傳遞路徑\n    selectCat: function selectCat(state, test) {\n      state.categorySelected = test;\n      console.log('vuex', state.categorySelected);\n    },\n    //加入購物車\n    addToCart: function addToCart(state, item) {\n      var found = state.cart.find(function (course) {\n        return course.id === item.id;\n      });\n\n      if (found) {\n        alert('課程已在購物車');\n      } else {\n        state.cart.push(item);\n      }\n\n      this.commit('saveData');\n    },\n    //保存cart內項目\n    saveData: function saveData(state) {\n      window.localStorage.setItem('cart', _JSON$stringify(state.cart));\n    },\n    //移除購物車內容\n    removeItem: function removeItem(state, item) {\n      var index = state.cart.indexOf(item);\n      state.cart.splice(index, 1);\n      this.commit('totalPrice');\n      this.commit('saveData');\n    },\n    // 如果剩餘人數為零則歸0\n    changeRemains: function changeRemains(state, item) {\n      item.forEach(function (courseName) {\n        return state.cart.forEach(function (course) {\n          console.log(item);\n\n          if (course.title === courseName) {\n            course.remainQuantity = 0;\n          }\n        });\n      });\n    },\n    //計算總價格\n    totalPrice: function totalPrice(state) {\n      if (state.cart.length === 0) {\n        state.totalOrigin = 0;\n        state.total = 0;\n        state.totalDiscount = 0;\n      } else {\n        state.totalOrigin = state.cart.map(function (course) {\n          return course.price;\n        }).reduce(function (total, amount) {\n          return total + amount;\n        });\n        state.total = state.totalOrigin;\n        state.totalDiscount = state.cart.filter(function (course) {\n          return course.discount;\n        }).length * state.discount;\n      }\n    },\n    //加入購物券計算價格\n    addCouponCode: function addCouponCode(state, coupon) {\n      state.coupon = coupon;\n      state.coupon ? state.total = state.totalOrigin - state.totalDiscount : state.total = state.totalOrigin;\n    },\n    //結帳完成清空購物車\n    checkout: function checkout(state) {\n      state.courses = [];\n      state.coupon = false;\n      state.totalOrigin = 0;\n      state.totalDiscount = 0;\n      state.total = 0;\n      state.cart = [];\n    }\n  }\n});",{"version":3,"sources":["/Users/huangpei-yu/Front-Gym/src/store.js"],"names":["Vue","Vuex","createPersistedState","use","cart","window","localStorage","getItem","Store","plugins","state","categorySelected","courses","coupon","totalOrigin","discount","totalDiscount","total","JSON","parse","actions","getCourses","db","collection","get","then","snapshot","forEach","doc","push","data","mutations","selectCat","test","console","log","addToCart","item","found","find","course","id","alert","commit","saveData","setItem","removeItem","index","indexOf","splice","changeRemains","courseName","title","remainQuantity","totalPrice","length","map","price","reduce","amount","filter","addCouponCode","checkout"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nVue.use(Vuex)\n\nlet cart = window.localStorage.getItem('cart')\n\nexport default new Vuex.Store({\n    plugins: [createPersistedState()],\n    state: {\n        categorySelected: \"所有課程\",\n        // isLoading: true,\n        courses: [],\n        coupon: false,\n        totalOrigin: 0,\n        discount: 100,\n        totalDiscount: 0,\n        total: 0,\n        cart: cart ? JSON.parse(cart) : [],\n    },\n    actions: {\n        getCourses(state) {\n            db.collection('courses').get().then(\n                snapshot => snapshot.forEach(doc => state.courses.push(doc.data())))\n\n        }\n\n    },\n    mutations: {\n\n        //傳遞路徑\n        selectCat(state, test) {\n            state.categorySelected = test\n            console.log('vuex', state.categorySelected);\n\n        },\n\n\n        //加入購物車\n        addToCart(state, item) {\n            let found = state.cart.find(course => course.id === item.id);\n            if (found) {\n                alert('課程已在購物車')\n            } else {\n                state.cart.push(item);\n            }\n            this.commit('saveData')\n        },\n\n        //保存cart內項目\n        saveData(state) {\n            window.localStorage.setItem('cart', JSON.stringify(state.cart))\n        },\n\n        //移除購物車內容\n        removeItem(state, item) {\n            let index = state.cart.indexOf(item);\n            state.cart.splice(index, 1)\n            this.commit('totalPrice')\n            this.commit('saveData')\n        },\n\n        // 如果剩餘人數為零則歸0\n        changeRemains(state, item) {\n            item.forEach(courseName =>\n                state.cart.forEach(course => {\n                    console.log(item);\n                    if (course.title === courseName) {\n                        course.remainQuantity = 0\n                    }\n                })\n            )\n        },\n\n        //計算總價格\n        totalPrice(state) {\n            if (state.cart.length === 0) {\n                state.totalOrigin = 0\n                state.total = 0\n                state.totalDiscount = 0\n            } else {\n                state.totalOrigin = state.cart.map(course => course.price).reduce((total, amount) => total + amount);\n                state.total = state.totalOrigin;\n                state.totalDiscount = state.cart.filter(course => course.discount).length * state.discount\n            }\n\n        },\n\n        //加入購物券計算價格\n        addCouponCode(state, coupon) {\n            state.coupon = coupon;\n            state.coupon ? state.total = state.totalOrigin - state.totalDiscount : state.total = state.totalOrigin\n        },\n\n\n        //結帳完成清空購物車\n        checkout(state) {\n            state.courses = [];\n            state.coupon = false;\n            state.totalOrigin = 0;\n            state.totalDiscount = 0;\n            state.total = 0;\n            state.cart = [];\n        }\n\n    },\n}, )"]}]}