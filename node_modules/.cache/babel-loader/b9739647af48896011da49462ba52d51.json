{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js!/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangpei-yu/Front-Gym/src/views/Overview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/views/Overview.vue","mtime":1580814229133},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Set from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"/Users/huangpei-yu/Front-Gym/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fb, db } from \"@/firebase/init\";\nimport moment from \"moment\";\nimport countTo from \"vue-count-to\";\nexport default {\n  components: {\n    countTo: countTo\n  },\n  data: function data() {\n    return {\n      isLoading: false,\n      avgRating: 0,\n      payments: [],\n      users: [],\n      userStatArr: [],\n      comments: [],\n      ratingsAll: [],\n      ratingsCat: [],\n      courseRating: []\n    };\n  },\n  firestore: function firestore() {\n    var _this = this;\n\n    this.isLoading = true;\n    return {\n      courses: {\n        ref: db.collection(\"courses\"),\n        resolve: function resolve(data) {\n          var allRating = data.map(function (course) {\n            return {\n              id: course.id,\n              title: course.title,\n              rating: course.avgRating,\n              img: course.imageUrl\n            };\n          });\n          _this.courseRating = allRating.sort(function (a, b) {\n            return b.rating - a.rating;\n          });\n        }\n      },\n      comments: {\n        ref: db.collection(\"comments\").orderBy(\"timestamp\", \"desc\"),\n        resolve: function resolve(data) {\n          //rating pie chart\n          _this.avgRating = data.reduce(function (acc, cur) {\n            return acc.rating + cur.rating;\n          });\n          var allRating = data.map(function (comment) {\n            return comment.rating;\n          });\n          allRating = _toConsumableArray(new _Set(allRating));\n          allRating = allRating.forEach(function (rating) {\n            _this.ratingsAll.push({\n              rating: \"\".concat(rating, \" \\u661F\"),\n              num: data.filter(function (data) {\n                return data.rating === rating;\n              }).length,\n              percentage: data.filter(function (data) {\n                return data.rating === rating;\n              }).length / data.length\n            });\n          });\n\n          _this.ratingStat(); // rating stacked chart\n\n\n          var catRating = data.map(function (comment) {\n            return comment.cat;\n          });\n          catRating = _toConsumableArray(new _Set(catRating));\n          _this.ratingsCat = catRating.map(function (cat) {\n            return {\n              cat: cat,\n              \"1 星\": 0,\n              \"2 星\": 0,\n              \"3 星\": 0,\n              \"4 星\": 0,\n              \"5 星\": 0\n            };\n          });\n\n          _this.ratingsCat.forEach(function (cat) {\n            data.forEach(function (comment) {\n              if (comment.cat === cat.cat) {\n                switch (comment.rating) {\n                  case 1:\n                    cat[\"1 星\"]++;\n                    break;\n\n                  case 2:\n                    cat[\"2 星\"]++;\n                    break;\n\n                  case 3:\n                    cat[\"3 星\"]++;\n                    break;\n\n                  case 4:\n                    cat[\"4 星\"]++;\n                    break;\n\n                  case 5:\n                    cat[\"5 星\"]++;\n                    break;\n\n                  default:\n                    break;\n                }\n              }\n            });\n          });\n\n          _this.catRating();\n        }\n      },\n      payments: db.collection(\"payments\").orderBy(\"timestamp\", \"desc\"),\n      users: {\n        ref: db.collection(\"users\").orderBy(\"timestamp\", \"desc\"),\n        resolve: function resolve(data) {\n          //user bar chart\n          var allTime = [];\n          data.forEach(function (data) {\n            var doc = moment(data.timestamp).format(\"YYYY-MM\");\n            allTime.push(doc);\n          });\n          allTime = _toConsumableArray(new _Set(allTime));\n          allTime = allTime.forEach(function (dataTime) {\n            _this.userStatArr.push({\n              time: dataTime,\n              member: data.filter(function (data) {\n                return moment(data.timestamp).format(\"YYYY-MM\") == dataTime;\n              }).length\n            });\n          });\n\n          _this.userStat();\n\n          _this.checkComment();\n\n          _this.loading();\n        }\n      }\n    };\n  },\n  methods: {\n    loading: function loading() {\n      this.isLoading = false;\n    },\n    time: function time(num) {\n      return moment(num).format(\"YYYY/MM/DD\");\n    },\n    timeSec: function timeSec(num) {\n      return moment(num).format(\"YYYY/MM/DD HH:mm\");\n    },\n    userName: function userName(name) {\n      var len = 10;\n\n      if (name.length > len) {\n        name = name.substring(0, len - 1) + \"...\";\n      }\n\n      return name;\n    },\n    checkComment: function checkComment() {\n      var _this2 = this;\n\n      var vm = this;\n      vm.comments.forEach(function (comment) {\n        var id = comment.user;\n        var toId = comment.toId;\n        vm.users.forEach(function (user) {\n          if (id === user.userId) {\n            comment.name = user.name;\n            comment.img = user.userImg;\n          }\n        });\n\n        _this2.courseRating.forEach(function (course) {\n          if (toId === course.id) {\n            comment.course = course.title;\n          }\n        });\n      });\n    },\n    userStat: function userStat() {\n      var svg = d3.select(\".user-graph\").append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"class\", \"user-svg\");\n      var margin = 25;\n      var graphWidth = _parseInt(d3.select(\".user-svg\").style(\"width\"), 10) - margin * 2;\n      var graphHeight = _parseInt(d3.select(\".user-svg\").style(\"height\"), 10) - margin * 2;\n      var graph = svg.append(\"g\").attr(\"width\", graphWidth).attr(\"height\", graphHeight).attr(\"transform\", \"translate(\".concat(margin * 1.5, \",\").concat(margin * 0.2, \")\")); // 設置X軸群組\n\n      var xAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\").attr(\"transform\", \"translate(0,\".concat(graphHeight, \")\")); // 設置Y軸群組\n\n      var yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\"); // Y刻度（點）的縮放比例range\n\n      var y = d3.scaleLinear().range([graphHeight, 0]); //因為會由上往下呈現所以要顛倒設定\n      // X刻度（點）的縮放比例range\n\n      var x = d3.scaleBand().range([graphWidth, 0]).paddingInner(0.3).paddingOuter(0.3);\n      var xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n\n      var yAxis = d3.axisLeft(y).ticks(5).tickFormat(function (d) {\n        return d + \"人\";\n      });\n      var axis = svg.append(\"g\").attr(\"class\", \"axis\");\n      var grid = axis.append(\"g\").attr(\"class\", \"grid\");\n      var toolTip = d3.tip().attr(\"class\", \"tooltip\").html(function (d) {\n        var content = \"<div class=\\\"name\\\">\".concat(d.time, \"</div>\");\n        content += \"<div class=\\\"cost\\\">\".concat(d.member, \" \\u4EBA</div>\");\n        return content;\n      });\n      graph.call(toolTip);\n      updateStat(this.userStatArr);\n\n      function updateStat(data) {\n        // 1.join the data to rects\n        var rects = graph.selectAll(\"rect\").data(data); // 2.updating scale domains\n\n        y.domain([0, d3.max(data, function (d) {\n          return d.member;\n        })]);\n        x.domain(data.map(function (item) {\n          return item.time;\n        })); // 3.remove exit selection\n\n        rects.exit().remove(); // 4.update current shapes in dom\n\n        rects.attr(\"width\", x.bandwidth).attr(\"x\", function (d) {\n          return x(d.time);\n        }).attr(\"y\", function (d) {\n          return y(d.member);\n        }).attr(\"height\", function (d) {\n          return graphHeight - y(d.member);\n        }); // 5.append the enter selection to the dom\n\n        rects.enter().append(\"rect\").attr(\"width\", x.bandwidth).attr(\"height\", function (d) {\n          return graphHeight - y(d.member);\n        }) //ending condition\n        .attr(\"fill\", \"#8cdad8\").attr(\"x\", function (d) {\n          return x(d.time);\n        }).attr(\"y\", function (d) {\n          return y(d.member);\n        }); //ending condition\n\n        graph.selectAll(\"rect\").on(\"mouseover\", function (d, i, n) {\n          toolTip.show(d, n[i]);\n          toolTip.style(\"top\", d3.event.pageY + 16 + \"px\").style(\"left\", d3.event.pageX + 16 + \"px\");\n          d3.select(n[i]).transition().duration(300).attr(\"fill\", \"#3ac2c9\");\n        }).on(\"mouseleave\", function (d, i, n) {\n          toolTip.hide(d, n[i]);\n          d3.select(n[i]).transition().duration(300).attr(\"r\", 4).attr(\"fill\", \"#8cdad8\");\n        });\n        xAxisGroup.call(xAxis);\n        yAxisGroup.call(yAxis);\n        xAxisGroup.selectAll(\"text\").attr(\"transform\", \"rotate(-35)\").attr(\"text-anchor\", \"end\");\n      }\n    },\n    catRating: function catRating() {\n      var dataset = this.ratingsCat;\n      var stack = d3.stack().keys([\"1 星\", \"2 星\", \"3 星\", \"4 星\", \"5 星\"]);\n      var series = stack(dataset);\n      console.log(series); //       const svg = d3\n      //         .select(\".rating-graph_cat\")\n      //         .append(\"svg\")\n      //         .attr(\"width\", \"100%\")\n      //         .attr(\"height\", \"100%\")\n      //         .attr(\"class\", \"cattating-svg\");\n      //       const margin = 25;\n      //       const graphWidth =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"width\"), 10) - margin * 2;\n      //       const graphHeight =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"height\"), 10) - margin * 2;\n      //       const graph = svg\n      //         .append(\"g\")\n      //         .attr(\"width\", graphWidth)\n      //         .attr(\"height\", graphHeight)\n      //         .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n      //       // 設置X軸群組\n      //       let xAxisGroup = graph\n      //         .append(\"g\")\n      //         .attr(\"class\", \"axis\")\n      //         .attr(\"transform\", `translate(0,${graphHeight})`);\n      //       // 設置Y軸群組\n      //       let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n      //       let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      //       let yAxis = d3\n      //         .axisLeft(y)\n      //         .ticks(5)\n      //         .tickFormat(d => d + \"人\");\n      //       const x = d3\n      //         .scaleBand()\n      //         .rangeRound([0, graphWidth])\n      //         .paddingInner(0.3)\n      //         .paddingOuter(0.3);\n      //       const y = d3.scaleLinear().rangeRound([graphHeight, 0]);\n      //       const z = d3.scaleOrdinal(d3.schemeGnBu[9]);\n      //       const stack = d3.stack().offset(d3.stackOffsetExpand);\n      //       update(this.ratingsCat);\n      // let data=this.ratingsCat;\n      //       series = d3\n      //         .stack()\n      //         .offset(d3.stackOffsetExpand)\n      //         .keys(data.columns.slice(1))(data);\n      //       console.log(\"yo\", series);\n      // function update(data) {\n      //   // 1.join the data to rects\n      //   let rects = graph.selectAll(\"rect\").data(data);\n      //   // 2.updating scale domains\n      //   x.domain(data.map(item => item.cat));\n      //   z.domain(data.columns.slice(1)(data));\n      //   // 3.remove exit selection\n      //   rects.exit().remove();\n      //   // 4.update current shapes in dom\n      //   rects\n      //     .attr(\"width\", x.bandwidth)\n      //     .attr(\"x\", d => x(d.time))\n      //     .attr(\"y\", d => y(d.member))\n      //     .attr(\"height\", d => graphHeight - y(d.member));\n      //   // 5.append the enter selection to the dom\n      //   // var serie = graph\n      //   //   .selectAll(\".serie\")\n      //   //   .data(stack.keys(data.columns.slice(1))(data))\n      //   //   .enter()\n      //   //   .append(\"g\")\n      //   //   .attr(\"class\", \"serie\")\n      //   //   .attr(\"fill\", function(d) {\n      //   //     return z(d.key);\n      //   //   });\n      //   // serie\n      //   //   .selectAll(\"rect\")\n      //   //   .data(function(d) {\n      //   //     return d;\n      //   //   })\n      //   //   .enter()\n      //   //   .append(\"rect\")\n      //   //   .attr(\"x\", function(d) {\n      //   //     return x(d.data.State);\n      //   //   })\n      //   //   .attr(\"y\", function(d) {\n      //   //     return y(d[1]);\n      //   //   })\n      //   //   .attr(\"height\", function(d) {\n      //   //     return y(d[0]) - y(d[1]);\n      //   //   })\n      //   //   .attr(\"width\", x.bandwidth());\n      //   // xAxisGroup.call(xAxis);\n      //   // yAxisGroup.call(yAxis);\n      // }\n    },\n    ratingStat: function ratingStat() {\n      var dims = {\n        height: 320,\n        width: 320,\n        radius: 150\n      };\n      var cent = {\n        x: dims.width / 2 + 5,\n        y: dims.height / 2 + 5\n      }; //整體的圖形範圍\n\n      var svg = d3.select(\".rating-graph_all\").append(\"svg\").attr(\"width\", dims.width + 150).attr(\"height\", dims.height + 20);\n      var graph = svg.append(\"g\").attr(\"class\", \"pie-slices\").attr(\"transform\", \"translate(\".concat(cent.x, \",\").concat(cent.y, \")\")); //製作的圖形種類為圓餅圖，並接收資料來繪製角度\n\n      var pie = d3.pie().sort(null) //排序資料\n      .value(function (d) {\n        return d.num;\n      }); //定義圓的弧度\n\n      var arcPath = d3.arc().outerRadius(dims.radius).innerRadius(dims.radius / 2); //定義圓餅圖的顏色\n\n      var color = d3.scaleOrdinal(d3.schemeGnBu[9]); //legend setup\n\n      var legendGroup = svg.append(\"g\").attr(\"class\", \"pie-legends\").attr(\"transform\", \"translate(\".concat(dims.width + 40, \",100)\"));\n      var legend = d3.legendColor().shape(\"square\").shapePadding(10).scale(color);\n      var tip = d3.tip().attr(\"class\", \"tooltip\").html(function (d) {\n        var content = \"<div class=\\\"name\\\">\".concat(d.data.rating, \"</div>\");\n        content += \"<div class=\\\"cost\\\">\".concat(d.data.num, \" \\u4EBA</div>\");\n        return content;\n      });\n      graph.call(tip);\n      update(this.ratingsAll); //update function\n\n      function update(data) {\n        //update color scale domain\n        color.domain(data.map(function (item) {\n          return item.rating;\n        })); //update and call legend\n\n        legendGroup.call(legend);\n        legendGroup.selectAll(\"text\").attr(\"fill\", \"#707070\"); //join enhance (pie) data to path element\n\n        var paths = graph.selectAll(\"path\").data(pie(data)); //handle the exit selection\n\n        paths.exit() // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenExit)\n        .remove(); //直接刪除的話圓餅圖會缺一塊，因此再讀一次資料讓它重畫\n\n        paths.attr(\"d\", arcPath); // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenUpdate);\n        //handle the current DOM path updates\n\n        paths.enter().append(\"path\").attr(\"class\", \"pie-arc\").attr(\"d\", arcPath) //path string，svg 的 <path> 標籤可以繪製任何圖形，其中的 d 為圖形的路徑\n        .attr(\"stroke\", \"#fff\") //路徑線的顏色\n        .attr(\"stroke-width\", 3) //路徑線的寬度\n        .attr(\"fill\", function (d) {\n          return color(d.data.rating);\n        }); // .each(function(d) {\n        //   this._current = d;\n        // })\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenEnter);\n        //add Events\n\n        graph.selectAll(\"path\").on(\"mouseover\", function (d, i, n) {\n          arcPath.outerRadius(dims.radius + 10);\n          d3.select(this).transition().duration(250).attr(\"d\", arcPath);\n          tip.show(d, n[i]);\n          tip.style(\"top\", d3.event.pageY + 16 + \"px\").style(\"left\", d3.event.pageX + 16 + \"px\");\n        }).on(\"mouseout\", function (d, i, n) {\n          arcPath.outerRadius(dims.radius);\n          d3.select(this).transition().duration(250).attr(\"d\", arcPath);\n          tip.hide(d, n[i]);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Overview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA,SAAA,EAAA,EAAA,EAAA,QAAA,iBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,OAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,CAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,WAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA,EANA;AAOA,MAAA,UAAA,EAAA,EAPA;AAQA,MAAA,UAAA,EAAA,EARA;AASA,MAAA,YAAA,EAAA;AATA,KAAA;AAWA,GAhBA;AAkBA,EAAA,SAlBA,uBAkBA;AAAA;;AACA,SAAA,SAAA,GAAA,IAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,GAAA,EAAA,EAAA,CAAA,UAAA,CAAA,SAAA,CADA;AAEA,QAAA,OAAA,EAAA,iBAAA,IAAA,EAAA;AACA,cAAA,SAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,mBAAA;AACA,cAAA,EAAA,EAAA,MAAA,CAAA,EADA;AAEA,cAAA,KAAA,EAAA,MAAA,CAAA,KAFA;AAGA,cAAA,MAAA,EAAA,MAAA,CAAA,SAHA;AAIA,cAAA,GAAA,EAAA,MAAA,CAAA;AAJA,aAAA;AAAA,WAAA,CAAA;AAMA,UAAA,KAAA,CAAA,YAAA,GAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA;AAAA,WAAA,CAAA;AACA;AAVA,OADA;AAaA,MAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,OAAA,CAAA,WAAA,EAAA,MAAA,CADA;AAEA,QAAA,OAAA,EAAA,iBAAA,IAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,IAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,GAAA;AAAA,mBAAA,GAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA;AAAA,WAAA,CAAA;AACA,cAAA,SAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,mBAAA,OAAA,CAAA,MAAA;AAAA,WAAA,CAAA;AACA,UAAA,SAAA,sBAAA,SAAA,SAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,SAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,cAAA,MAAA,YAAA,MAAA,YADA;AAEA,cAAA,GAAA,EAAA,IAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,uBAAA,IAAA,CAAA,MAAA,KAAA,MAAA;AAAA,eAAA,EAAA,MAFA;AAGA,cAAA,UAAA,EACA,IAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,uBAAA,IAAA,CAAA,MAAA,KAAA,MAAA;AAAA,eAAA,EAAA,MAAA,GAAA,IAAA,CAAA;AAJA,aAAA;AAMA,WAPA,CAAA;;AAQA,UAAA,KAAA,CAAA,UAAA,GAbA,CAeA;;;AACA,cAAA,SAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,mBAAA,OAAA,CAAA,GAAA;AAAA,WAAA,CAAA;AAEA,UAAA,SAAA,sBAAA,SAAA,SAAA,CAAA,CAAA;AACA,UAAA,KAAA,CAAA,UAAA,GAAA,SAAA,CAAA,GAAA,CAAA,UAAA,GAAA;AAAA,mBAAA;AACA,cAAA,GAAA,EAAA,GADA;AAEA,qBAAA,CAFA;AAGA,qBAAA,CAHA;AAIA,qBAAA,CAJA;AAKA,qBAAA,CALA;AAMA,qBAAA;AANA,aAAA;AAAA,WAAA,CAAA;;AAQA,UAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,EAAA;AACA,wBAAA,OAAA,CAAA,MAAA;AACA,uBAAA,CAAA;AACA,oBAAA,GAAA,CAAA,KAAA,CAAA;AACA;;AACA,uBAAA,CAAA;AACA,oBAAA,GAAA,CAAA,KAAA,CAAA;AACA;;AAEA,uBAAA,CAAA;AACA,oBAAA,GAAA,CAAA,KAAA,CAAA;AACA;;AACA,uBAAA,CAAA;AACA,oBAAA,GAAA,CAAA,KAAA,CAAA;AACA;;AACA,uBAAA,CAAA;AACA,oBAAA,GAAA,CAAA,KAAA,CAAA;AACA;;AACA;AACA;AAlBA;AAoBA;AACA,aAvBA;AAwBA,WAzBA;;AA2BA,UAAA,KAAA,CAAA,SAAA;AACA;AAzDA,OAbA;AAwEA,MAAA,QAAA,EAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,OAAA,CAAA,WAAA,EAAA,MAAA,CAxEA;AAyEA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,OAAA,CAAA,WAAA,EAAA,MAAA,CADA;AAEA,QAAA,OAAA,EAAA,iBAAA,IAAA,EAAA;AACA;AACA,cAAA,OAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,gBAAA,GAAA,GAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA;AACA,YAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAHA;AAIA,UAAA,OAAA,sBAAA,SAAA,OAAA,CAAA,CAAA;AACA,UAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,KAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,MAAA,EAAA,IAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,uBAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,SAAA,KAAA,QAAA;AAAA,eADA,EAEA;AAJA,aAAA;AAMA,WAPA,CAAA;;AAQA,UAAA,KAAA,CAAA,QAAA;;AAEA,UAAA,KAAA,CAAA,YAAA;;AACA,UAAA,KAAA,CAAA,OAAA;AACA;AAtBA;AAzEA,KAAA;AAkGA,GAtHA;AAuHA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,IAJA,gBAIA,GAJA,EAIA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA,KANA;AAOA,IAAA,OAPA,mBAOA,GAPA,EAOA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,kBAAA,CAAA;AACA,KATA;AAUA,IAAA,QAVA,oBAUA,IAVA,EAUA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,UAAA,IAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,QAAA,IAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,GAAA,CAAA,IAAA,KAAA;AACA;;AACA,aAAA,IAAA;AACA,KAhBA;AAiBA,IAAA,YAjBA,0BAiBA;AAAA;;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,MAAA,EAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,EAAA,GAAA,OAAA,CAAA,IAAA;AACA,YAAA,IAAA,GAAA,OAAA,CAAA,IAAA;AACA,QAAA,EAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,EAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA,YAAA,OAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,YAAA,OAAA,CAAA,GAAA,GAAA,IAAA,CAAA,OAAA;AACA;AACA,SALA;;AAMA,QAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,cAAA,IAAA,KAAA,MAAA,CAAA,EAAA,EAAA;AACA,YAAA,OAAA,CAAA,MAAA,GAAA,MAAA,CAAA,KAAA;AACA;AACA,SAJA;AAKA,OAdA;AAeA,KAnCA;AAoCA,IAAA,QApCA,sBAoCA;AACA,UAAA,GAAA,GAAA,EAAA,CACA,MADA,CACA,aADA,EAEA,MAFA,CAEA,KAFA,EAGA,IAHA,CAGA,OAHA,EAGA,MAHA,EAIA,IAJA,CAIA,QAJA,EAIA,MAJA,EAKA,IALA,CAKA,OALA,EAKA,UALA,CAAA;AAOA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,UAAA,GACA,UAAA,EAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,CAAA,OAAA,CAAA,EAAA,EAAA,IAAA,MAAA,GAAA,CADA;AAEA,UAAA,WAAA,GACA,UAAA,EAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,EAAA,IAAA,MAAA,GAAA,CADA;AAGA,UAAA,KAAA,GAAA,GAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,OAFA,EAEA,UAFA,EAGA,IAHA,CAGA,QAHA,EAGA,WAHA,EAIA,IAJA,CAIA,WAJA,sBAIA,MAAA,GAAA,GAJA,cAIA,MAAA,GAAA,GAJA,OAAA,CAdA,CAoBA;;AACA,UAAA,UAAA,GAAA,KAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,OAFA,EAEA,MAFA,EAGA,IAHA,CAGA,WAHA,wBAGA,WAHA,OAAA,CArBA,CA0BA;;AACA,UAAA,UAAA,GAAA,KAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CA3BA,CA6BA;;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,WAAA,GAAA,KAAA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA,CA9BA,CA8BA;AACA;;AACA,UAAA,CAAA,GAAA,EAAA,CACA,SADA,GAEA,KAFA,CAEA,CAAA,UAAA,EAAA,CAAA,CAFA,EAGA,YAHA,CAGA,GAHA,EAIA,YAJA,CAIA,GAJA,CAAA;AAMA,UAAA,KAAA,GAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAtCA,CAsCA;;AACA,UAAA,KAAA,GAAA,EAAA,CACA,QADA,CACA,CADA,EAEA,KAFA,CAEA,CAFA,EAGA,UAHA,CAGA,UAAA,CAAA;AAAA,eAAA,CAAA,GAAA,GAAA;AAAA,OAHA,CAAA;AAKA,UAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA;AAEA,UAAA,IAAA,GAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA;AAEA,UAAA,OAAA,GAAA,EAAA,CACA,GADA,GAEA,IAFA,CAEA,OAFA,EAEA,SAFA,EAGA,IAHA,CAGA,UAAA,CAAA,EAAA;AACA,YAAA,OAAA,iCAAA,CAAA,CAAA,IAAA,WAAA;AACA,QAAA,OAAA,kCAAA,CAAA,CAAA,MAAA,kBAAA;AACA,eAAA,OAAA;AACA,OAPA,CAAA;AASA,MAAA,KAAA,CAAA,IAAA,CAAA,OAAA;AAEA,MAAA,UAAA,CAAA,KAAA,WAAA,CAAA;;AAEA,eAAA,UAAA,CAAA,IAAA,EAAA;AACA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,EAAA,IAAA,CAAA,IAAA,CAAA,CAFA,CAIA;;AACA,QAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,IAAA,EAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,MAAA;AAAA,SAAA,CAAA,CAAA;AACA,QAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,IAAA;AAAA,SAAA,CAAA,EANA,CAQA;;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,MAAA,GATA,CAWA;;AACA,QAAA,KAAA,CACA,IADA,CACA,OADA,EACA,CAAA,CAAA,SADA,EAEA,IAFA,CAEA,GAFA,EAEA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAAA,SAFA,EAGA,IAHA,CAGA,GAHA,EAGA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AAAA,SAHA,EAIA,IAJA,CAIA,QAJA,EAIA,UAAA,CAAA;AAAA,iBAAA,WAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AAAA,SAJA,EAZA,CAkBA;;AAEA,QAAA,KAAA,CACA,KADA,GAEA,MAFA,CAEA,MAFA,EAGA,IAHA,CAGA,OAHA,EAGA,CAAA,CAAA,SAHA,EAIA,IAJA,CAIA,QAJA,EAIA,UAAA,CAAA;AAAA,iBAAA,WAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AAAA,SAJA,EAIA;AAJA,SAKA,IALA,CAKA,MALA,EAKA,SALA,EAMA,IANA,CAMA,GANA,EAMA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAAA,SANA,EAOA,IAPA,CAOA,GAPA,EAOA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AAAA,SAPA,EApBA,CA2BA;;AAEA,QAAA,KAAA,CACA,SADA,CACA,MADA,EAEA,EAFA,CAEA,WAFA,EAEA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,OAAA,CACA,KADA,CACA,KADA,EACA,EAAA,CAAA,KAAA,CAAA,KAAA,GAAA,EAAA,GAAA,IADA,EAEA,KAFA,CAEA,MAFA,EAEA,EAAA,CAAA,KAAA,CAAA,KAAA,GAAA,EAAA,GAAA,IAFA;AAGA,UAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,UADA,GAEA,QAFA,CAEA,GAFA,EAGA,IAHA,CAGA,MAHA,EAGA,SAHA;AAIA,SAXA,EAYA,EAZA,CAYA,YAZA,EAYA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,UADA,GAEA,QAFA,CAEA,GAFA,EAGA,IAHA,CAGA,GAHA,EAGA,CAHA,EAIA,IAJA,CAIA,MAJA,EAIA,SAJA;AAKA,SAnBA;AAqBA,QAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AAEA,QAAA,UAAA,CACA,SADA,CACA,MADA,EAEA,IAFA,CAEA,WAFA,EAEA,aAFA,EAGA,IAHA,CAGA,aAHA,EAGA,KAHA;AAIA;AACA,KA3JA;AA6JA,IAAA,SA7JA,uBA6JA;AACA,UAAA,OAAA,GAAA,KAAA,UAAA;AAEA,UAAA,KAAA,GAAA,EAAA,CAAA,KAAA,GAAA,IAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;AAEA,UAAA,MAAA,GAAA,KAAA,CAAA,OAAA,CAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAPA,CASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,KA/QA;AAgRA,IAAA,UAhRA,wBAgRA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAAA;AAMA,UAAA,IAAA,GAAA;AACA,QAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CADA;AAEA,QAAA,CAAA,EAAA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA;AAFA,OAAA,CAPA,CAYA;;AACA,UAAA,GAAA,GAAA,EAAA,CACA,MADA,CACA,mBADA,EAEA,MAFA,CAEA,KAFA,EAGA,IAHA,CAGA,OAHA,EAGA,IAAA,CAAA,KAAA,GAAA,GAHA,EAIA,IAJA,CAIA,QAJA,EAIA,IAAA,CAAA,MAAA,GAAA,EAJA,CAAA;AAMA,UAAA,KAAA,GAAA,GAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,OAFA,EAEA,YAFA,EAGA,IAHA,CAGA,WAHA,sBAGA,IAAA,CAAA,CAHA,cAGA,IAAA,CAAA,CAHA,OAAA,CAnBA,CAwBA;;AACA,UAAA,GAAA,GAAA,EAAA,CACA,GADA,GAEA,IAFA,CAEA,IAFA,EAEA;AAFA,OAGA,KAHA,CAGA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,GAAA;AAAA,OAHA,CAAA,CAzBA,CA8BA;;AACA,UAAA,OAAA,GAAA,EAAA,CACA,GADA,GAEA,WAFA,CAEA,IAAA,CAAA,MAFA,EAGA,WAHA,CAGA,IAAA,CAAA,MAAA,GAAA,CAHA,CAAA,CA/BA,CAoCA;;AACA,UAAA,KAAA,GAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CArCA,CAuCA;;AACA,UAAA,WAAA,GAAA,GAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,OAFA,EAEA,aAFA,EAGA,IAHA,CAGA,WAHA,sBAGA,IAAA,CAAA,KAAA,GAAA,EAHA,WAAA;AAKA,UAAA,MAAA,GAAA,EAAA,CACA,WADA,GAEA,KAFA,CAEA,QAFA,EAGA,YAHA,CAGA,EAHA,EAIA,KAJA,CAIA,KAJA,CAAA;AAMA,UAAA,GAAA,GAAA,EAAA,CACA,GADA,GAEA,IAFA,CAEA,OAFA,EAEA,SAFA,EAGA,IAHA,CAGA,UAAA,CAAA,EAAA;AACA,YAAA,OAAA,iCAAA,CAAA,CAAA,IAAA,CAAA,MAAA,WAAA;AACA,QAAA,OAAA,kCAAA,CAAA,CAAA,IAAA,CAAA,GAAA,kBAAA;AACA,eAAA,OAAA;AACA,OAPA,CAAA;AASA,MAAA,KAAA,CAAA,IAAA,CAAA,GAAA;AAEA,MAAA,MAAA,CAAA,KAAA,UAAA,CAAA,CA9DA,CA+DA;;AACA,eAAA,MAAA,CAAA,IAAA,EAAA;AACA;AAEA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,MAAA;AAAA,SAAA,CAAA,EAHA,CAKA;;AACA,QAAA,WAAA,CAAA,IAAA,CAAA,MAAA;AACA,QAAA,WAAA,CAAA,SAAA,CAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAAA,SAAA,EAPA,CASA;;AAEA,YAAA,KAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,EAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAXA,CAaA;;AACA,QAAA,KAAA,CACA,IADA,GAEA;AACA;AACA;AAJA,SAKA,MALA,GAdA,CAqBA;;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EAtBA,CAuBA;AACA;AACA;AAEA;;AACA,QAAA,KAAA,CACA,KADA,GAEA,MAFA,CAEA,MAFA,EAGA,IAHA,CAGA,OAHA,EAGA,SAHA,EAIA,IAJA,CAIA,GAJA,EAIA,OAJA,EAIA;AAJA,SAKA,IALA,CAKA,QALA,EAKA,MALA,EAKA;AALA,SAMA,IANA,CAMA,cANA,EAMA,CANA,EAMA;AANA,SAOA,IAPA,CAOA,MAPA,EAOA,UAAA,CAAA;AAAA,iBAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AAAA,SAPA,EA5BA,CAoCA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAA,KAAA,CACA,SADA,CACA,MADA,EAEA,EAFA,CAEA,WAFA,EAEA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EACA,UADA,GAEA,QAFA,CAEA,GAFA,EAGA,IAHA,CAGA,GAHA,EAGA,OAHA;AAIA,UAAA,GAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,CACA,KADA,CACA,KADA,EACA,EAAA,CAAA,KAAA,CAAA,KAAA,GAAA,EAAA,GAAA,IADA,EAEA,KAFA,CAEA,MAFA,EAEA,EAAA,CAAA,KAAA,CAAA,KAAA,GAAA,EAAA,GAAA,IAFA;AAGA,SAZA,EAaA,EAbA,CAaA,UAbA,EAaA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EACA,UADA,GAEA,QAFA,CAEA,GAFA,EAGA,IAHA,CAGA,GAHA,EAGA,OAHA;AAIA,UAAA,GAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,SApBA;AAqBA;AACA;AAlZA;AAvHA,CAAA","sourcesContent":["<template>\n  <div>\n    <loading :active.sync=\"isLoading\" :color=\"'#ff5722'\"></loading>\n    <h2 class=\"heading-secondary\">數據總覽</h2>\n    <div class=\"overview-row\">\n      <a href=\"#overview-members\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-users\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <count-to\n            class=\"overview-box__figure\"\n            :startVal=\"0\"\n            :endVal=\"users.length\"\n            :duration=\"3000\"\n          ></count-to>\n          <span class=\"overview-box__text\">會員人數</span>\n        </div>\n      </a>\n      <a href=\"#overview-orders\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-file-invoice-dollar\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <count-to\n            class=\"overview-box__figure\"\n            :startVal=\"0\"\n            :endVal=\"payments.length\"\n            :duration=\"3000\"\n          ></count-to>\n          <span class=\"overview-box__text\">訂單數量</span>\n        </div>\n      </a>\n      <a href=\"#overview-revenue\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-money-bill\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <span class=\"overview-box__figure\">{{56|currency}}</span>\n          <span class=\"overview-box__text\">營收金額</span>\n        </div>\n      </a>\n      <a href=\"#overview-ratings\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-star\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <count-to\n            class=\"overview-box__figure\"\n            :startVal=\"0\"\n            :endVal=\"avgRating\"\n            :decimals=\"1\"\n            :duration=\"3000\"\n          ></count-to>\n\n          <span class=\"overview-box__text\">課程評價</span>\n        </div>\n      </a>\n    </div>\n    <section id=\"overview-members\">\n      <div class=\"overview-row\">\n        <div class=\"info-box user-stat\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">會員統計</div>\n          </div>\n          <div class=\"info-box__body user-graph\"></div>\n        </div>\n        <div class=\"info-box info-box__user\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">新進會員</div>\n          </div>\n          <div class=\"info-box__body\">\n            <div class=\"overview-user\" v-for=\"user in users.slice(0,6)\" :key=\"user.id\">\n              <img class=\"overview-user__img\" :src=\"user.userImg\" :alt=\"user.name\">\n              <div class=\"overview-user__name\">{{userName(user.name)}}</div>\n              <span>{{time(user.timestamp)}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section id=\"overview-orders\">\n      <div class=\"info-box\">\n        <div class=\"info-box__header\">\n          <div class=\"heading-tertiary--grey\">新進訂單</div>\n        </div>\n        <div class=\"info-box__body p-0\">\n          <table class=\"overview-orders__table\">\n            <thead>\n              <tr>\n                <th>購買時間</th>\n                <th>姓名</th>\n                <th>購買課程</th>\n                <th>應付金額</th>\n                <th>狀態</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr\n                v-for=\"(payment,index) in payments.slice(0,6)\"\n                :class=\"{'lighten-row':index%2==1}\"\n                :key=\"payment.id\"\n              >\n                <td>{{ timeSec(payment.timestamp)}}</td>\n                <td>{{payment.name}}</td>\n                <td>\n                  <p\n                    v-for=\"course in payment.courses\"\n                    style=\"text-align:left\"\n                    :key=\"course.id\"\n                  >{{course.title}}</p>\n                </td>\n                <td>{{payment.total|currency}}</td>\n                <td>\n                  <template v-if=\"!payment.status\">\n                    <i class=\"fas fa-exclamation-triangle\" style=\"color:#ff5721\"></i> 尚未付款\n                  </template>\n                  <template v-if=\"payment.status\">\n                    <i class=\"fas fa-check-circle\" style=\"color:#0fc195\"></i> 付款完成\n                  </template>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </section>\n    <section id=\"overview-revenue\">\n      <div class=\"info-box\">\n        <div class=\"info-box__header\">\n          <div class=\"heading-tertiary--grey\">類別營收</div>\n        </div>\n        <div class=\"info-box__body\"></div>\n      </div>\n    </section>\n\n    <section id=\"overview-ratings\">\n      <div class=\"overview-row\">\n        <div class=\"info-box rating-stat__all\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">整體評價</div>\n          </div>\n          <div class=\"info-box__body rating-graph_all\"></div>\n        </div>\n        <div class=\"info-box\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">類別評價</div>\n          </div>\n          <div class=\"info-box__body rating-graph_cat\"></div>\n        </div>\n      </div>\n      <div class=\"overview-row\">\n        <div class=\"info-box rating-rank\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">評價排名</div>\n          </div>\n          <div class=\"info-box__body\">\n            <ul class=\"rating-rank__list\">\n              <li\n                class=\"rating-rank__item\"\n                v-for=\"course in courseRating.slice(0,5)\"\n                v-if=\"course.rating>0\"\n                :key=\"course.id\"\n              >\n                <img class=\"rating-rank__img\" :src=\"course.img\" alt>\n                <div class=\"rating-rank__title\">{{course.title}}</div>\n\n                <div class=\"rating-rank__rating\">{{course.rating}}</div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"info-box new-comment\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">最新評論</div>\n          </div>\n          <div class=\"info-box__body\">\n            <ul class=\"new-comment__list\">\n              <li\n                class=\"new-comment__item d-flex\"\n                v-for=\"comment in comments.slice(0,5)\"\n                :key=\"comment.userId\"\n              >\n                <img class=\"new-comment__img\" :src=\"comment.img\" :alt=\"comment.name\">\n                <div class=\"new-comment__content\">\n                  <div class=\"d-flex\">\n                    <div class=\"new-comment__name\">{{comment.name}}</div>\n                    <div class>{{comment.course}}</div>\n                    <div class=\"new-comment__rating\">\n                      <i class=\"fas fa-star\"></i>\n                      {{comment.rating}}\n                    </div>\n                    <div class=\"new-comment__time\">{{timeSec(comment.timestamp)}}</div>\n                  </div>\n                  <div class=\"new-comment__comment\">\n                    <p class>{{comment.comment}}</p>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <ul>\n      確認每月UI如何呈現\n      <li>本月營收</li>\n      <li>總訂單數</li>\n      <li>課程評價</li>\n      <li>待完成訂單</li>\n      <li>完成訂單</li>\n      <li>課程總數</li>\n      <li>類別報名人數</li>\n      <li>類別收入</li>\n      <!-- <li>支付方式</li>\n      <li>支付方式之金額</li>-->\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { fb, db } from \"@/firebase/init\";\nimport moment from \"moment\";\nimport countTo from \"vue-count-to\";\n\nexport default {\n  components: {\n    countTo\n  },\n  data() {\n    return {\n      isLoading: false,\n      avgRating: 0,\n      payments: [],\n      users: [],\n      userStatArr: [],\n      comments: [],\n      ratingsAll: [],\n      ratingsCat: [],\n      courseRating: []\n    };\n  },\n\n  firestore() {\n    this.isLoading = true;\n    return {\n      courses: {\n        ref: db.collection(\"courses\"),\n        resolve: data => {\n          let allRating = data.map(course => ({\n            id: course.id,\n            title: course.title,\n            rating: course.avgRating,\n            img: course.imageUrl\n          }));\n          this.courseRating = allRating.sort((a, b) => b.rating - a.rating);\n        }\n      },\n      comments: {\n        ref: db.collection(\"comments\").orderBy(\"timestamp\", \"desc\"),\n        resolve: data => {\n          //rating pie chart\n          this.avgRating = data.reduce((acc, cur) => acc.rating + cur.rating);\n          let allRating = data.map(comment => comment.rating);\n          allRating = [...new Set(allRating)];\n          allRating = allRating.forEach(rating => {\n            this.ratingsAll.push({\n              rating: `${rating} 星`,\n              num: data.filter(data => data.rating === rating).length,\n              percentage:\n                data.filter(data => data.rating === rating).length / data.length\n            });\n          });\n          this.ratingStat();\n\n          // rating stacked chart\n          let catRating = data.map(comment => comment.cat);\n\n          catRating = [...new Set(catRating)];\n          this.ratingsCat = catRating.map(cat => ({\n            cat,\n            \"1 星\": 0,\n            \"2 星\": 0,\n            \"3 星\": 0,\n            \"4 星\": 0,\n            \"5 星\": 0\n          }));\n          this.ratingsCat.forEach(cat => {\n            data.forEach(comment => {\n              if (comment.cat === cat.cat) {\n                switch (comment.rating) {\n                  case 1:\n                    cat[\"1 星\"]++;\n                    break;\n                  case 2:\n                    cat[\"2 星\"]++;\n                    break;\n\n                  case 3:\n                    cat[\"3 星\"]++;\n                    break;\n                  case 4:\n                    cat[\"4 星\"]++;\n                    break;\n                  case 5:\n                    cat[\"5 星\"]++;\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n          });\n\n          this.catRating();\n        }\n      },\n      payments: db.collection(\"payments\").orderBy(\"timestamp\", \"desc\"),\n      users: {\n        ref: db.collection(\"users\").orderBy(\"timestamp\", \"desc\"),\n        resolve: data => {\n          //user bar chart\n          let allTime = [];\n          data.forEach(data => {\n            const doc = moment(data.timestamp).format(\"YYYY-MM\");\n            allTime.push(doc);\n          });\n          allTime = [...new Set(allTime)];\n          allTime = allTime.forEach(dataTime => {\n            this.userStatArr.push({\n              time: dataTime,\n              member: data.filter(\n                data => moment(data.timestamp).format(\"YYYY-MM\") == dataTime\n              ).length\n            });\n          });\n          this.userStat();\n\n          this.checkComment();\n          this.loading();\n        }\n      }\n    };\n  },\n  methods: {\n    loading() {\n      this.isLoading = false;\n    },\n    time(num) {\n      return moment(num).format(\"YYYY/MM/DD\");\n    },\n    timeSec(num) {\n      return moment(num).format(\"YYYY/MM/DD HH:mm\");\n    },\n    userName(name) {\n      let len = 10;\n      if (name.length > len) {\n        name = name.substring(0, len - 1) + \"...\";\n      }\n      return name;\n    },\n    checkComment() {\n      let vm = this;\n\n      vm.comments.forEach(comment => {\n        let id = comment.user;\n        let toId = comment.toId;\n        vm.users.forEach(user => {\n          if (id === user.userId) {\n            comment.name = user.name;\n            comment.img = user.userImg;\n          }\n        });\n        this.courseRating.forEach(course => {\n          if (toId === course.id) {\n            comment.course = course.title;\n          }\n        });\n      });\n    },\n    userStat() {\n      let svg = d3\n        .select(\".user-graph\")\n        .append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .attr(\"class\", \"user-svg\");\n\n      let margin = 25;\n      let graphWidth =\n        parseInt(d3.select(\".user-svg\").style(\"width\"), 10) - margin * 2;\n      let graphHeight =\n        parseInt(d3.select(\".user-svg\").style(\"height\"), 10) - margin * 2;\n\n      let graph = svg\n        .append(\"g\")\n        .attr(\"width\", graphWidth)\n        .attr(\"height\", graphHeight)\n        .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n\n      // 設置X軸群組\n      let xAxisGroup = graph\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", `translate(0,${graphHeight})`);\n\n      // 設置Y軸群組\n      let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n\n      // Y刻度（點）的縮放比例range\n      let y = d3.scaleLinear().range([graphHeight, 0]); //因為會由上往下呈現所以要顛倒設定\n      // X刻度（點）的縮放比例range\n      let x = d3\n        .scaleBand()\n        .range([graphWidth, 0])\n        .paddingInner(0.3)\n        .paddingOuter(0.3);\n\n      let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      let yAxis = d3\n        .axisLeft(y)\n        .ticks(5)\n        .tickFormat(d => d + \"人\");\n\n      var axis = svg.append(\"g\").attr(\"class\", \"axis\");\n\n      var grid = axis.append(\"g\").attr(\"class\", \"grid\");\n\n      let toolTip = d3\n        .tip()\n        .attr(\"class\", \"tooltip\")\n        .html(d => {\n          let content = `<div class=\"name\">${d.time}</div>`;\n          content += `<div class=\"cost\">${d.member} 人</div>`;\n          return content;\n        });\n\n      graph.call(toolTip);\n\n      updateStat(this.userStatArr);\n\n      function updateStat(data) {\n        // 1.join the data to rects\n        let rects = graph.selectAll(\"rect\").data(data);\n\n        // 2.updating scale domains\n        y.domain([0, d3.max(data, d => d.member)]);\n        x.domain(data.map(item => item.time));\n\n        // 3.remove exit selection\n        rects.exit().remove();\n\n        // 4.update current shapes in dom\n        rects\n          .attr(\"width\", x.bandwidth)\n          .attr(\"x\", d => x(d.time))\n          .attr(\"y\", d => y(d.member))\n          .attr(\"height\", d => graphHeight - y(d.member));\n\n        // 5.append the enter selection to the dom\n\n        rects\n          .enter()\n          .append(\"rect\")\n          .attr(\"width\", x.bandwidth)\n          .attr(\"height\", d => graphHeight - y(d.member)) //ending condition\n          .attr(\"fill\", \"#8cdad8\")\n          .attr(\"x\", d => x(d.time))\n          .attr(\"y\", d => y(d.member)); //ending condition\n\n        graph\n          .selectAll(\"rect\")\n          .on(\"mouseover\", (d, i, n) => {\n            toolTip.show(d, n[i]);\n            toolTip\n              .style(\"top\", d3.event.pageY + 16 + \"px\")\n              .style(\"left\", d3.event.pageX + 16 + \"px\");\n            d3.select(n[i])\n              .transition()\n              .duration(300)\n              .attr(\"fill\", \"#3ac2c9\");\n          })\n          .on(\"mouseleave\", (d, i, n) => {\n            toolTip.hide(d, n[i]);\n            d3.select(n[i])\n              .transition()\n              .duration(300)\n              .attr(\"r\", 4)\n              .attr(\"fill\", \"#8cdad8\");\n          });\n\n        xAxisGroup.call(xAxis);\n        yAxisGroup.call(yAxis);\n\n        xAxisGroup\n          .selectAll(\"text\")\n          .attr(\"transform\", \"rotate(-35)\")\n          .attr(\"text-anchor\", \"end\");\n      }\n    },\n\n    catRating() {\n      const dataset = this.ratingsCat;\n\n      var stack = d3.stack().keys([\"1 星\", \"2 星\", \"3 星\", \"4 星\", \"5 星\"]);\n\n      var series = stack(dataset);\n\n      console.log(series);\n\n      //       const svg = d3\n      //         .select(\".rating-graph_cat\")\n      //         .append(\"svg\")\n      //         .attr(\"width\", \"100%\")\n      //         .attr(\"height\", \"100%\")\n      //         .attr(\"class\", \"cattating-svg\");\n\n      //       const margin = 25;\n      //       const graphWidth =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"width\"), 10) - margin * 2;\n      //       const graphHeight =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"height\"), 10) - margin * 2;\n\n      //       const graph = svg\n      //         .append(\"g\")\n      //         .attr(\"width\", graphWidth)\n      //         .attr(\"height\", graphHeight)\n      //         .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n\n      //       // 設置X軸群組\n      //       let xAxisGroup = graph\n      //         .append(\"g\")\n      //         .attr(\"class\", \"axis\")\n      //         .attr(\"transform\", `translate(0,${graphHeight})`);\n\n      //       // 設置Y軸群組\n      //       let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n\n      //       let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      //       let yAxis = d3\n      //         .axisLeft(y)\n      //         .ticks(5)\n      //         .tickFormat(d => d + \"人\");\n\n      //       const x = d3\n      //         .scaleBand()\n      //         .rangeRound([0, graphWidth])\n      //         .paddingInner(0.3)\n      //         .paddingOuter(0.3);\n      //       const y = d3.scaleLinear().rangeRound([graphHeight, 0]);\n      //       const z = d3.scaleOrdinal(d3.schemeGnBu[9]);\n\n      //       const stack = d3.stack().offset(d3.stackOffsetExpand);\n\n      //       update(this.ratingsCat);\n      // let data=this.ratingsCat;\n      //       series = d3\n      //         .stack()\n      //         .offset(d3.stackOffsetExpand)\n      //         .keys(data.columns.slice(1))(data);\n\n      //       console.log(\"yo\", series);\n\n      // function update(data) {\n      //   // 1.join the data to rects\n      //   let rects = graph.selectAll(\"rect\").data(data);\n\n      //   // 2.updating scale domains\n      //   x.domain(data.map(item => item.cat));\n      //   z.domain(data.columns.slice(1)(data));\n\n      //   // 3.remove exit selection\n      //   rects.exit().remove();\n\n      //   // 4.update current shapes in dom\n      //   rects\n      //     .attr(\"width\", x.bandwidth)\n      //     .attr(\"x\", d => x(d.time))\n      //     .attr(\"y\", d => y(d.member))\n      //     .attr(\"height\", d => graphHeight - y(d.member));\n\n      //   // 5.append the enter selection to the dom\n\n      //   // var serie = graph\n      //   //   .selectAll(\".serie\")\n      //   //   .data(stack.keys(data.columns.slice(1))(data))\n\n      //   //   .enter()\n      //   //   .append(\"g\")\n      //   //   .attr(\"class\", \"serie\")\n      //   //   .attr(\"fill\", function(d) {\n      //   //     return z(d.key);\n      //   //   });\n\n      //   // serie\n      //   //   .selectAll(\"rect\")\n      //   //   .data(function(d) {\n      //   //     return d;\n      //   //   })\n      //   //   .enter()\n      //   //   .append(\"rect\")\n      //   //   .attr(\"x\", function(d) {\n      //   //     return x(d.data.State);\n      //   //   })\n      //   //   .attr(\"y\", function(d) {\n      //   //     return y(d[1]);\n      //   //   })\n      //   //   .attr(\"height\", function(d) {\n      //   //     return y(d[0]) - y(d[1]);\n      //   //   })\n      //   //   .attr(\"width\", x.bandwidth());\n\n      //   // xAxisGroup.call(xAxis);\n      //   // yAxisGroup.call(yAxis);\n      // }\n    },\n    ratingStat() {\n      const dims = {\n        height: 320,\n        width: 320,\n        radius: 150\n      };\n\n      const cent = {\n        x: dims.width / 2 + 5,\n        y: dims.height / 2 + 5\n      };\n\n      //整體的圖形範圍\n      const svg = d3\n        .select(\".rating-graph_all\")\n        .append(\"svg\")\n        .attr(\"width\", dims.width + 150)\n        .attr(\"height\", dims.height + 20);\n\n      const graph = svg\n        .append(\"g\")\n        .attr(\"class\", \"pie-slices\")\n        .attr(\"transform\", `translate(${cent.x},${cent.y})`);\n\n      //製作的圖形種類為圓餅圖，並接收資料來繪製角度\n      const pie = d3\n        .pie()\n        .sort(null) //排序資料\n        .value(d => d.num);\n\n      //定義圓的弧度\n      const arcPath = d3\n        .arc()\n        .outerRadius(dims.radius)\n        .innerRadius(dims.radius / 2);\n\n      //定義圓餅圖的顏色\n      const color = d3.scaleOrdinal(d3.schemeGnBu[9]);\n\n      //legend setup\n      const legendGroup = svg\n        .append(\"g\")\n        .attr(\"class\", \"pie-legends\")\n        .attr(\"transform\", `translate(${dims.width + 40},100)`);\n\n      const legend = d3\n        .legendColor()\n        .shape(\"square\")\n        .shapePadding(10)\n        .scale(color);\n\n      const tip = d3\n        .tip()\n        .attr(\"class\", \"tooltip\")\n        .html(d => {\n          let content = `<div class=\"name\">${d.data.rating}</div>`;\n          content += `<div class=\"cost\">${d.data.num} 人</div>`;\n          return content;\n        });\n\n      graph.call(tip);\n\n      update(this.ratingsAll);\n      //update function\n      function update(data) {\n        //update color scale domain\n\n        color.domain(data.map(item => item.rating));\n\n        //update and call legend\n        legendGroup.call(legend);\n        legendGroup.selectAll(\"text\").attr(\"fill\", \"#707070\");\n\n        //join enhance (pie) data to path element\n\n        const paths = graph.selectAll(\"path\").data(pie(data));\n\n        //handle the exit selection\n        paths\n          .exit()\n          // .transition()\n          // .duration(750)\n          // .attrTween(\"d\", arcTweenExit)\n          .remove();\n\n        //直接刪除的話圓餅圖會缺一塊，因此再讀一次資料讓它重畫\n        paths.attr(\"d\", arcPath);\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenUpdate);\n\n        //handle the current DOM path updates\n        paths\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", \"pie-arc\")\n          .attr(\"d\", arcPath) //path string，svg 的 <path> 標籤可以繪製任何圖形，其中的 d 為圖形的路徑\n          .attr(\"stroke\", \"#fff\") //路徑線的顏色\n          .attr(\"stroke-width\", 3) //路徑線的寬度\n          .attr(\"fill\", d => color(d.data.rating));\n        // .each(function(d) {\n        //   this._current = d;\n        // })\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenEnter);\n\n        //add Events\n        graph\n          .selectAll(\"path\")\n          .on(\"mouseover\", function(d, i, n) {\n            arcPath.outerRadius(dims.radius + 10);\n            d3.select(this)\n              .transition()\n              .duration(250)\n              .attr(\"d\", arcPath);\n            tip.show(d, n[i]);\n            tip\n              .style(\"top\", d3.event.pageY + 16 + \"px\")\n              .style(\"left\", d3.event.pageX + 16 + \"px\");\n          })\n          .on(\"mouseout\", function(d, i, n) {\n            arcPath.outerRadius(dims.radius);\n            d3.select(this)\n              .transition()\n              .duration(250)\n              .attr(\"d\", arcPath);\n            tip.hide(d, n[i]);\n          });\n      }\n    }\n  }\n};\n</script>"],"sourceRoot":"src/views"}]}