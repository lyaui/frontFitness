{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangpei-yu/Front-Gym/src/views/Overview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/views/Overview.vue","mtime":1580814229133},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fb, db } from \"@/firebase/init\";\nimport moment from \"moment\";\nimport countTo from \"vue-count-to\";\n\nexport default {\n  components: {\n    countTo\n  },\n  data() {\n    return {\n      isLoading: false,\n      avgRating: 0,\n      payments: [],\n      users: [],\n      userStatArr: [],\n      comments: [],\n      ratingsAll: [],\n      ratingsCat: [],\n      courseRating: []\n    };\n  },\n\n  firestore() {\n    this.isLoading = true;\n    return {\n      courses: {\n        ref: db.collection(\"courses\"),\n        resolve: data => {\n          let allRating = data.map(course => ({\n            id: course.id,\n            title: course.title,\n            rating: course.avgRating,\n            img: course.imageUrl\n          }));\n          this.courseRating = allRating.sort((a, b) => b.rating - a.rating);\n        }\n      },\n      comments: {\n        ref: db.collection(\"comments\").orderBy(\"timestamp\", \"desc\"),\n        resolve: data => {\n          //rating pie chart\n          this.avgRating = data.reduce((acc, cur) => acc.rating + cur.rating);\n          let allRating = data.map(comment => comment.rating);\n          allRating = [...new Set(allRating)];\n          allRating = allRating.forEach(rating => {\n            this.ratingsAll.push({\n              rating: `${rating} 星`,\n              num: data.filter(data => data.rating === rating).length,\n              percentage:\n                data.filter(data => data.rating === rating).length / data.length\n            });\n          });\n          this.ratingStat();\n\n          // rating stacked chart\n          let catRating = data.map(comment => comment.cat);\n\n          catRating = [...new Set(catRating)];\n          this.ratingsCat = catRating.map(cat => ({\n            cat,\n            \"1 星\": 0,\n            \"2 星\": 0,\n            \"3 星\": 0,\n            \"4 星\": 0,\n            \"5 星\": 0\n          }));\n          this.ratingsCat.forEach(cat => {\n            data.forEach(comment => {\n              if (comment.cat === cat.cat) {\n                switch (comment.rating) {\n                  case 1:\n                    cat[\"1 星\"]++;\n                    break;\n                  case 2:\n                    cat[\"2 星\"]++;\n                    break;\n\n                  case 3:\n                    cat[\"3 星\"]++;\n                    break;\n                  case 4:\n                    cat[\"4 星\"]++;\n                    break;\n                  case 5:\n                    cat[\"5 星\"]++;\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n          });\n\n          this.catRating();\n        }\n      },\n      payments: db.collection(\"payments\").orderBy(\"timestamp\", \"desc\"),\n      users: {\n        ref: db.collection(\"users\").orderBy(\"timestamp\", \"desc\"),\n        resolve: data => {\n          //user bar chart\n          let allTime = [];\n          data.forEach(data => {\n            const doc = moment(data.timestamp).format(\"YYYY-MM\");\n            allTime.push(doc);\n          });\n          allTime = [...new Set(allTime)];\n          allTime = allTime.forEach(dataTime => {\n            this.userStatArr.push({\n              time: dataTime,\n              member: data.filter(\n                data => moment(data.timestamp).format(\"YYYY-MM\") == dataTime\n              ).length\n            });\n          });\n          this.userStat();\n\n          this.checkComment();\n          this.loading();\n        }\n      }\n    };\n  },\n  methods: {\n    loading() {\n      this.isLoading = false;\n    },\n    time(num) {\n      return moment(num).format(\"YYYY/MM/DD\");\n    },\n    timeSec(num) {\n      return moment(num).format(\"YYYY/MM/DD HH:mm\");\n    },\n    userName(name) {\n      let len = 10;\n      if (name.length > len) {\n        name = name.substring(0, len - 1) + \"...\";\n      }\n      return name;\n    },\n    checkComment() {\n      let vm = this;\n\n      vm.comments.forEach(comment => {\n        let id = comment.user;\n        let toId = comment.toId;\n        vm.users.forEach(user => {\n          if (id === user.userId) {\n            comment.name = user.name;\n            comment.img = user.userImg;\n          }\n        });\n        this.courseRating.forEach(course => {\n          if (toId === course.id) {\n            comment.course = course.title;\n          }\n        });\n      });\n    },\n    userStat() {\n      let svg = d3\n        .select(\".user-graph\")\n        .append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .attr(\"class\", \"user-svg\");\n\n      let margin = 25;\n      let graphWidth =\n        parseInt(d3.select(\".user-svg\").style(\"width\"), 10) - margin * 2;\n      let graphHeight =\n        parseInt(d3.select(\".user-svg\").style(\"height\"), 10) - margin * 2;\n\n      let graph = svg\n        .append(\"g\")\n        .attr(\"width\", graphWidth)\n        .attr(\"height\", graphHeight)\n        .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n\n      // 設置X軸群組\n      let xAxisGroup = graph\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", `translate(0,${graphHeight})`);\n\n      // 設置Y軸群組\n      let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n\n      // Y刻度（點）的縮放比例range\n      let y = d3.scaleLinear().range([graphHeight, 0]); //因為會由上往下呈現所以要顛倒設定\n      // X刻度（點）的縮放比例range\n      let x = d3\n        .scaleBand()\n        .range([graphWidth, 0])\n        .paddingInner(0.3)\n        .paddingOuter(0.3);\n\n      let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      let yAxis = d3\n        .axisLeft(y)\n        .ticks(5)\n        .tickFormat(d => d + \"人\");\n\n      var axis = svg.append(\"g\").attr(\"class\", \"axis\");\n\n      var grid = axis.append(\"g\").attr(\"class\", \"grid\");\n\n      let toolTip = d3\n        .tip()\n        .attr(\"class\", \"tooltip\")\n        .html(d => {\n          let content = `<div class=\"name\">${d.time}</div>`;\n          content += `<div class=\"cost\">${d.member} 人</div>`;\n          return content;\n        });\n\n      graph.call(toolTip);\n\n      updateStat(this.userStatArr);\n\n      function updateStat(data) {\n        // 1.join the data to rects\n        let rects = graph.selectAll(\"rect\").data(data);\n\n        // 2.updating scale domains\n        y.domain([0, d3.max(data, d => d.member)]);\n        x.domain(data.map(item => item.time));\n\n        // 3.remove exit selection\n        rects.exit().remove();\n\n        // 4.update current shapes in dom\n        rects\n          .attr(\"width\", x.bandwidth)\n          .attr(\"x\", d => x(d.time))\n          .attr(\"y\", d => y(d.member))\n          .attr(\"height\", d => graphHeight - y(d.member));\n\n        // 5.append the enter selection to the dom\n\n        rects\n          .enter()\n          .append(\"rect\")\n          .attr(\"width\", x.bandwidth)\n          .attr(\"height\", d => graphHeight - y(d.member)) //ending condition\n          .attr(\"fill\", \"#8cdad8\")\n          .attr(\"x\", d => x(d.time))\n          .attr(\"y\", d => y(d.member)); //ending condition\n\n        graph\n          .selectAll(\"rect\")\n          .on(\"mouseover\", (d, i, n) => {\n            toolTip.show(d, n[i]);\n            toolTip\n              .style(\"top\", d3.event.pageY + 16 + \"px\")\n              .style(\"left\", d3.event.pageX + 16 + \"px\");\n            d3.select(n[i])\n              .transition()\n              .duration(300)\n              .attr(\"fill\", \"#3ac2c9\");\n          })\n          .on(\"mouseleave\", (d, i, n) => {\n            toolTip.hide(d, n[i]);\n            d3.select(n[i])\n              .transition()\n              .duration(300)\n              .attr(\"r\", 4)\n              .attr(\"fill\", \"#8cdad8\");\n          });\n\n        xAxisGroup.call(xAxis);\n        yAxisGroup.call(yAxis);\n\n        xAxisGroup\n          .selectAll(\"text\")\n          .attr(\"transform\", \"rotate(-35)\")\n          .attr(\"text-anchor\", \"end\");\n      }\n    },\n\n    catRating() {\n      const dataset = this.ratingsCat;\n\n      var stack = d3.stack().keys([\"1 星\", \"2 星\", \"3 星\", \"4 星\", \"5 星\"]);\n\n      var series = stack(dataset);\n\n      console.log(series);\n\n      //       const svg = d3\n      //         .select(\".rating-graph_cat\")\n      //         .append(\"svg\")\n      //         .attr(\"width\", \"100%\")\n      //         .attr(\"height\", \"100%\")\n      //         .attr(\"class\", \"cattating-svg\");\n\n      //       const margin = 25;\n      //       const graphWidth =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"width\"), 10) - margin * 2;\n      //       const graphHeight =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"height\"), 10) - margin * 2;\n\n      //       const graph = svg\n      //         .append(\"g\")\n      //         .attr(\"width\", graphWidth)\n      //         .attr(\"height\", graphHeight)\n      //         .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n\n      //       // 設置X軸群組\n      //       let xAxisGroup = graph\n      //         .append(\"g\")\n      //         .attr(\"class\", \"axis\")\n      //         .attr(\"transform\", `translate(0,${graphHeight})`);\n\n      //       // 設置Y軸群組\n      //       let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n\n      //       let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      //       let yAxis = d3\n      //         .axisLeft(y)\n      //         .ticks(5)\n      //         .tickFormat(d => d + \"人\");\n\n      //       const x = d3\n      //         .scaleBand()\n      //         .rangeRound([0, graphWidth])\n      //         .paddingInner(0.3)\n      //         .paddingOuter(0.3);\n      //       const y = d3.scaleLinear().rangeRound([graphHeight, 0]);\n      //       const z = d3.scaleOrdinal(d3.schemeGnBu[9]);\n\n      //       const stack = d3.stack().offset(d3.stackOffsetExpand);\n\n      //       update(this.ratingsCat);\n      // let data=this.ratingsCat;\n      //       series = d3\n      //         .stack()\n      //         .offset(d3.stackOffsetExpand)\n      //         .keys(data.columns.slice(1))(data);\n\n      //       console.log(\"yo\", series);\n\n      // function update(data) {\n      //   // 1.join the data to rects\n      //   let rects = graph.selectAll(\"rect\").data(data);\n\n      //   // 2.updating scale domains\n      //   x.domain(data.map(item => item.cat));\n      //   z.domain(data.columns.slice(1)(data));\n\n      //   // 3.remove exit selection\n      //   rects.exit().remove();\n\n      //   // 4.update current shapes in dom\n      //   rects\n      //     .attr(\"width\", x.bandwidth)\n      //     .attr(\"x\", d => x(d.time))\n      //     .attr(\"y\", d => y(d.member))\n      //     .attr(\"height\", d => graphHeight - y(d.member));\n\n      //   // 5.append the enter selection to the dom\n\n      //   // var serie = graph\n      //   //   .selectAll(\".serie\")\n      //   //   .data(stack.keys(data.columns.slice(1))(data))\n\n      //   //   .enter()\n      //   //   .append(\"g\")\n      //   //   .attr(\"class\", \"serie\")\n      //   //   .attr(\"fill\", function(d) {\n      //   //     return z(d.key);\n      //   //   });\n\n      //   // serie\n      //   //   .selectAll(\"rect\")\n      //   //   .data(function(d) {\n      //   //     return d;\n      //   //   })\n      //   //   .enter()\n      //   //   .append(\"rect\")\n      //   //   .attr(\"x\", function(d) {\n      //   //     return x(d.data.State);\n      //   //   })\n      //   //   .attr(\"y\", function(d) {\n      //   //     return y(d[1]);\n      //   //   })\n      //   //   .attr(\"height\", function(d) {\n      //   //     return y(d[0]) - y(d[1]);\n      //   //   })\n      //   //   .attr(\"width\", x.bandwidth());\n\n      //   // xAxisGroup.call(xAxis);\n      //   // yAxisGroup.call(yAxis);\n      // }\n    },\n    ratingStat() {\n      const dims = {\n        height: 320,\n        width: 320,\n        radius: 150\n      };\n\n      const cent = {\n        x: dims.width / 2 + 5,\n        y: dims.height / 2 + 5\n      };\n\n      //整體的圖形範圍\n      const svg = d3\n        .select(\".rating-graph_all\")\n        .append(\"svg\")\n        .attr(\"width\", dims.width + 150)\n        .attr(\"height\", dims.height + 20);\n\n      const graph = svg\n        .append(\"g\")\n        .attr(\"class\", \"pie-slices\")\n        .attr(\"transform\", `translate(${cent.x},${cent.y})`);\n\n      //製作的圖形種類為圓餅圖，並接收資料來繪製角度\n      const pie = d3\n        .pie()\n        .sort(null) //排序資料\n        .value(d => d.num);\n\n      //定義圓的弧度\n      const arcPath = d3\n        .arc()\n        .outerRadius(dims.radius)\n        .innerRadius(dims.radius / 2);\n\n      //定義圓餅圖的顏色\n      const color = d3.scaleOrdinal(d3.schemeGnBu[9]);\n\n      //legend setup\n      const legendGroup = svg\n        .append(\"g\")\n        .attr(\"class\", \"pie-legends\")\n        .attr(\"transform\", `translate(${dims.width + 40},100)`);\n\n      const legend = d3\n        .legendColor()\n        .shape(\"square\")\n        .shapePadding(10)\n        .scale(color);\n\n      const tip = d3\n        .tip()\n        .attr(\"class\", \"tooltip\")\n        .html(d => {\n          let content = `<div class=\"name\">${d.data.rating}</div>`;\n          content += `<div class=\"cost\">${d.data.num} 人</div>`;\n          return content;\n        });\n\n      graph.call(tip);\n\n      update(this.ratingsAll);\n      //update function\n      function update(data) {\n        //update color scale domain\n\n        color.domain(data.map(item => item.rating));\n\n        //update and call legend\n        legendGroup.call(legend);\n        legendGroup.selectAll(\"text\").attr(\"fill\", \"#707070\");\n\n        //join enhance (pie) data to path element\n\n        const paths = graph.selectAll(\"path\").data(pie(data));\n\n        //handle the exit selection\n        paths\n          .exit()\n          // .transition()\n          // .duration(750)\n          // .attrTween(\"d\", arcTweenExit)\n          .remove();\n\n        //直接刪除的話圓餅圖會缺一塊，因此再讀一次資料讓它重畫\n        paths.attr(\"d\", arcPath);\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenUpdate);\n\n        //handle the current DOM path updates\n        paths\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", \"pie-arc\")\n          .attr(\"d\", arcPath) //path string，svg 的 <path> 標籤可以繪製任何圖形，其中的 d 為圖形的路徑\n          .attr(\"stroke\", \"#fff\") //路徑線的顏色\n          .attr(\"stroke-width\", 3) //路徑線的寬度\n          .attr(\"fill\", d => color(d.data.rating));\n        // .each(function(d) {\n        //   this._current = d;\n        // })\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenEnter);\n\n        //add Events\n        graph\n          .selectAll(\"path\")\n          .on(\"mouseover\", function(d, i, n) {\n            arcPath.outerRadius(dims.radius + 10);\n            d3.select(this)\n              .transition()\n              .duration(250)\n              .attr(\"d\", arcPath);\n            tip.show(d, n[i]);\n            tip\n              .style(\"top\", d3.event.pageY + 16 + \"px\")\n              .style(\"left\", d3.event.pageX + 16 + \"px\");\n          })\n          .on(\"mouseout\", function(d, i, n) {\n            arcPath.outerRadius(dims.radius);\n            d3.select(this)\n              .transition()\n              .duration(250)\n              .attr(\"d\", arcPath);\n            tip.hide(d, n[i]);\n          });\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Overview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Overview.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <loading :active.sync=\"isLoading\" :color=\"'#ff5722'\"></loading>\n    <h2 class=\"heading-secondary\">數據總覽</h2>\n    <div class=\"overview-row\">\n      <a href=\"#overview-members\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-users\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <count-to\n            class=\"overview-box__figure\"\n            :startVal=\"0\"\n            :endVal=\"users.length\"\n            :duration=\"3000\"\n          ></count-to>\n          <span class=\"overview-box__text\">會員人數</span>\n        </div>\n      </a>\n      <a href=\"#overview-orders\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-file-invoice-dollar\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <count-to\n            class=\"overview-box__figure\"\n            :startVal=\"0\"\n            :endVal=\"payments.length\"\n            :duration=\"3000\"\n          ></count-to>\n          <span class=\"overview-box__text\">訂單數量</span>\n        </div>\n      </a>\n      <a href=\"#overview-revenue\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-money-bill\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <span class=\"overview-box__figure\">{{56|currency}}</span>\n          <span class=\"overview-box__text\">營收金額</span>\n        </div>\n      </a>\n      <a href=\"#overview-ratings\" class=\"overview-box\">\n        <div class=\"overview-box__icon\">\n          <i class=\"fas fa-star\"></i>\n        </div>\n        <div class=\"overview-box__content\">\n          <count-to\n            class=\"overview-box__figure\"\n            :startVal=\"0\"\n            :endVal=\"avgRating\"\n            :decimals=\"1\"\n            :duration=\"3000\"\n          ></count-to>\n\n          <span class=\"overview-box__text\">課程評價</span>\n        </div>\n      </a>\n    </div>\n    <section id=\"overview-members\">\n      <div class=\"overview-row\">\n        <div class=\"info-box user-stat\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">會員統計</div>\n          </div>\n          <div class=\"info-box__body user-graph\"></div>\n        </div>\n        <div class=\"info-box info-box__user\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">新進會員</div>\n          </div>\n          <div class=\"info-box__body\">\n            <div class=\"overview-user\" v-for=\"user in users.slice(0,6)\" :key=\"user.id\">\n              <img class=\"overview-user__img\" :src=\"user.userImg\" :alt=\"user.name\">\n              <div class=\"overview-user__name\">{{userName(user.name)}}</div>\n              <span>{{time(user.timestamp)}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section id=\"overview-orders\">\n      <div class=\"info-box\">\n        <div class=\"info-box__header\">\n          <div class=\"heading-tertiary--grey\">新進訂單</div>\n        </div>\n        <div class=\"info-box__body p-0\">\n          <table class=\"overview-orders__table\">\n            <thead>\n              <tr>\n                <th>購買時間</th>\n                <th>姓名</th>\n                <th>購買課程</th>\n                <th>應付金額</th>\n                <th>狀態</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr\n                v-for=\"(payment,index) in payments.slice(0,6)\"\n                :class=\"{'lighten-row':index%2==1}\"\n                :key=\"payment.id\"\n              >\n                <td>{{ timeSec(payment.timestamp)}}</td>\n                <td>{{payment.name}}</td>\n                <td>\n                  <p\n                    v-for=\"course in payment.courses\"\n                    style=\"text-align:left\"\n                    :key=\"course.id\"\n                  >{{course.title}}</p>\n                </td>\n                <td>{{payment.total|currency}}</td>\n                <td>\n                  <template v-if=\"!payment.status\">\n                    <i class=\"fas fa-exclamation-triangle\" style=\"color:#ff5721\"></i> 尚未付款\n                  </template>\n                  <template v-if=\"payment.status\">\n                    <i class=\"fas fa-check-circle\" style=\"color:#0fc195\"></i> 付款完成\n                  </template>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </section>\n    <section id=\"overview-revenue\">\n      <div class=\"info-box\">\n        <div class=\"info-box__header\">\n          <div class=\"heading-tertiary--grey\">類別營收</div>\n        </div>\n        <div class=\"info-box__body\"></div>\n      </div>\n    </section>\n\n    <section id=\"overview-ratings\">\n      <div class=\"overview-row\">\n        <div class=\"info-box rating-stat__all\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">整體評價</div>\n          </div>\n          <div class=\"info-box__body rating-graph_all\"></div>\n        </div>\n        <div class=\"info-box\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">類別評價</div>\n          </div>\n          <div class=\"info-box__body rating-graph_cat\"></div>\n        </div>\n      </div>\n      <div class=\"overview-row\">\n        <div class=\"info-box rating-rank\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">評價排名</div>\n          </div>\n          <div class=\"info-box__body\">\n            <ul class=\"rating-rank__list\">\n              <li\n                class=\"rating-rank__item\"\n                v-for=\"course in courseRating.slice(0,5)\"\n                v-if=\"course.rating>0\"\n                :key=\"course.id\"\n              >\n                <img class=\"rating-rank__img\" :src=\"course.img\" alt>\n                <div class=\"rating-rank__title\">{{course.title}}</div>\n\n                <div class=\"rating-rank__rating\">{{course.rating}}</div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"info-box new-comment\">\n          <div class=\"info-box__header\">\n            <div class=\"heading-tertiary--grey\">最新評論</div>\n          </div>\n          <div class=\"info-box__body\">\n            <ul class=\"new-comment__list\">\n              <li\n                class=\"new-comment__item d-flex\"\n                v-for=\"comment in comments.slice(0,5)\"\n                :key=\"comment.userId\"\n              >\n                <img class=\"new-comment__img\" :src=\"comment.img\" :alt=\"comment.name\">\n                <div class=\"new-comment__content\">\n                  <div class=\"d-flex\">\n                    <div class=\"new-comment__name\">{{comment.name}}</div>\n                    <div class>{{comment.course}}</div>\n                    <div class=\"new-comment__rating\">\n                      <i class=\"fas fa-star\"></i>\n                      {{comment.rating}}\n                    </div>\n                    <div class=\"new-comment__time\">{{timeSec(comment.timestamp)}}</div>\n                  </div>\n                  <div class=\"new-comment__comment\">\n                    <p class>{{comment.comment}}</p>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <ul>\n      確認每月UI如何呈現\n      <li>本月營收</li>\n      <li>總訂單數</li>\n      <li>課程評價</li>\n      <li>待完成訂單</li>\n      <li>完成訂單</li>\n      <li>課程總數</li>\n      <li>類別報名人數</li>\n      <li>類別收入</li>\n      <!-- <li>支付方式</li>\n      <li>支付方式之金額</li>-->\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { fb, db } from \"@/firebase/init\";\nimport moment from \"moment\";\nimport countTo from \"vue-count-to\";\n\nexport default {\n  components: {\n    countTo\n  },\n  data() {\n    return {\n      isLoading: false,\n      avgRating: 0,\n      payments: [],\n      users: [],\n      userStatArr: [],\n      comments: [],\n      ratingsAll: [],\n      ratingsCat: [],\n      courseRating: []\n    };\n  },\n\n  firestore() {\n    this.isLoading = true;\n    return {\n      courses: {\n        ref: db.collection(\"courses\"),\n        resolve: data => {\n          let allRating = data.map(course => ({\n            id: course.id,\n            title: course.title,\n            rating: course.avgRating,\n            img: course.imageUrl\n          }));\n          this.courseRating = allRating.sort((a, b) => b.rating - a.rating);\n        }\n      },\n      comments: {\n        ref: db.collection(\"comments\").orderBy(\"timestamp\", \"desc\"),\n        resolve: data => {\n          //rating pie chart\n          this.avgRating = data.reduce((acc, cur) => acc.rating + cur.rating);\n          let allRating = data.map(comment => comment.rating);\n          allRating = [...new Set(allRating)];\n          allRating = allRating.forEach(rating => {\n            this.ratingsAll.push({\n              rating: `${rating} 星`,\n              num: data.filter(data => data.rating === rating).length,\n              percentage:\n                data.filter(data => data.rating === rating).length / data.length\n            });\n          });\n          this.ratingStat();\n\n          // rating stacked chart\n          let catRating = data.map(comment => comment.cat);\n\n          catRating = [...new Set(catRating)];\n          this.ratingsCat = catRating.map(cat => ({\n            cat,\n            \"1 星\": 0,\n            \"2 星\": 0,\n            \"3 星\": 0,\n            \"4 星\": 0,\n            \"5 星\": 0\n          }));\n          this.ratingsCat.forEach(cat => {\n            data.forEach(comment => {\n              if (comment.cat === cat.cat) {\n                switch (comment.rating) {\n                  case 1:\n                    cat[\"1 星\"]++;\n                    break;\n                  case 2:\n                    cat[\"2 星\"]++;\n                    break;\n\n                  case 3:\n                    cat[\"3 星\"]++;\n                    break;\n                  case 4:\n                    cat[\"4 星\"]++;\n                    break;\n                  case 5:\n                    cat[\"5 星\"]++;\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n          });\n\n          this.catRating();\n        }\n      },\n      payments: db.collection(\"payments\").orderBy(\"timestamp\", \"desc\"),\n      users: {\n        ref: db.collection(\"users\").orderBy(\"timestamp\", \"desc\"),\n        resolve: data => {\n          //user bar chart\n          let allTime = [];\n          data.forEach(data => {\n            const doc = moment(data.timestamp).format(\"YYYY-MM\");\n            allTime.push(doc);\n          });\n          allTime = [...new Set(allTime)];\n          allTime = allTime.forEach(dataTime => {\n            this.userStatArr.push({\n              time: dataTime,\n              member: data.filter(\n                data => moment(data.timestamp).format(\"YYYY-MM\") == dataTime\n              ).length\n            });\n          });\n          this.userStat();\n\n          this.checkComment();\n          this.loading();\n        }\n      }\n    };\n  },\n  methods: {\n    loading() {\n      this.isLoading = false;\n    },\n    time(num) {\n      return moment(num).format(\"YYYY/MM/DD\");\n    },\n    timeSec(num) {\n      return moment(num).format(\"YYYY/MM/DD HH:mm\");\n    },\n    userName(name) {\n      let len = 10;\n      if (name.length > len) {\n        name = name.substring(0, len - 1) + \"...\";\n      }\n      return name;\n    },\n    checkComment() {\n      let vm = this;\n\n      vm.comments.forEach(comment => {\n        let id = comment.user;\n        let toId = comment.toId;\n        vm.users.forEach(user => {\n          if (id === user.userId) {\n            comment.name = user.name;\n            comment.img = user.userImg;\n          }\n        });\n        this.courseRating.forEach(course => {\n          if (toId === course.id) {\n            comment.course = course.title;\n          }\n        });\n      });\n    },\n    userStat() {\n      let svg = d3\n        .select(\".user-graph\")\n        .append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .attr(\"class\", \"user-svg\");\n\n      let margin = 25;\n      let graphWidth =\n        parseInt(d3.select(\".user-svg\").style(\"width\"), 10) - margin * 2;\n      let graphHeight =\n        parseInt(d3.select(\".user-svg\").style(\"height\"), 10) - margin * 2;\n\n      let graph = svg\n        .append(\"g\")\n        .attr(\"width\", graphWidth)\n        .attr(\"height\", graphHeight)\n        .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n\n      // 設置X軸群組\n      let xAxisGroup = graph\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", `translate(0,${graphHeight})`);\n\n      // 設置Y軸群組\n      let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n\n      // Y刻度（點）的縮放比例range\n      let y = d3.scaleLinear().range([graphHeight, 0]); //因為會由上往下呈現所以要顛倒設定\n      // X刻度（點）的縮放比例range\n      let x = d3\n        .scaleBand()\n        .range([graphWidth, 0])\n        .paddingInner(0.3)\n        .paddingOuter(0.3);\n\n      let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      let yAxis = d3\n        .axisLeft(y)\n        .ticks(5)\n        .tickFormat(d => d + \"人\");\n\n      var axis = svg.append(\"g\").attr(\"class\", \"axis\");\n\n      var grid = axis.append(\"g\").attr(\"class\", \"grid\");\n\n      let toolTip = d3\n        .tip()\n        .attr(\"class\", \"tooltip\")\n        .html(d => {\n          let content = `<div class=\"name\">${d.time}</div>`;\n          content += `<div class=\"cost\">${d.member} 人</div>`;\n          return content;\n        });\n\n      graph.call(toolTip);\n\n      updateStat(this.userStatArr);\n\n      function updateStat(data) {\n        // 1.join the data to rects\n        let rects = graph.selectAll(\"rect\").data(data);\n\n        // 2.updating scale domains\n        y.domain([0, d3.max(data, d => d.member)]);\n        x.domain(data.map(item => item.time));\n\n        // 3.remove exit selection\n        rects.exit().remove();\n\n        // 4.update current shapes in dom\n        rects\n          .attr(\"width\", x.bandwidth)\n          .attr(\"x\", d => x(d.time))\n          .attr(\"y\", d => y(d.member))\n          .attr(\"height\", d => graphHeight - y(d.member));\n\n        // 5.append the enter selection to the dom\n\n        rects\n          .enter()\n          .append(\"rect\")\n          .attr(\"width\", x.bandwidth)\n          .attr(\"height\", d => graphHeight - y(d.member)) //ending condition\n          .attr(\"fill\", \"#8cdad8\")\n          .attr(\"x\", d => x(d.time))\n          .attr(\"y\", d => y(d.member)); //ending condition\n\n        graph\n          .selectAll(\"rect\")\n          .on(\"mouseover\", (d, i, n) => {\n            toolTip.show(d, n[i]);\n            toolTip\n              .style(\"top\", d3.event.pageY + 16 + \"px\")\n              .style(\"left\", d3.event.pageX + 16 + \"px\");\n            d3.select(n[i])\n              .transition()\n              .duration(300)\n              .attr(\"fill\", \"#3ac2c9\");\n          })\n          .on(\"mouseleave\", (d, i, n) => {\n            toolTip.hide(d, n[i]);\n            d3.select(n[i])\n              .transition()\n              .duration(300)\n              .attr(\"r\", 4)\n              .attr(\"fill\", \"#8cdad8\");\n          });\n\n        xAxisGroup.call(xAxis);\n        yAxisGroup.call(yAxis);\n\n        xAxisGroup\n          .selectAll(\"text\")\n          .attr(\"transform\", \"rotate(-35)\")\n          .attr(\"text-anchor\", \"end\");\n      }\n    },\n\n    catRating() {\n      const dataset = this.ratingsCat;\n\n      var stack = d3.stack().keys([\"1 星\", \"2 星\", \"3 星\", \"4 星\", \"5 星\"]);\n\n      var series = stack(dataset);\n\n      console.log(series);\n\n      //       const svg = d3\n      //         .select(\".rating-graph_cat\")\n      //         .append(\"svg\")\n      //         .attr(\"width\", \"100%\")\n      //         .attr(\"height\", \"100%\")\n      //         .attr(\"class\", \"cattating-svg\");\n\n      //       const margin = 25;\n      //       const graphWidth =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"width\"), 10) - margin * 2;\n      //       const graphHeight =\n      //         parseInt(d3.select(\".cattating-svg\").style(\"height\"), 10) - margin * 2;\n\n      //       const graph = svg\n      //         .append(\"g\")\n      //         .attr(\"width\", graphWidth)\n      //         .attr(\"height\", graphHeight)\n      //         .attr(\"transform\", `translate(${margin * 1.5},${margin * 0.2})`);\n\n      //       // 設置X軸群組\n      //       let xAxisGroup = graph\n      //         .append(\"g\")\n      //         .attr(\"class\", \"axis\")\n      //         .attr(\"transform\", `translate(0,${graphHeight})`);\n\n      //       // 設置Y軸群組\n      //       let yAxisGroup = graph.append(\"g\").attr(\"class\", \"axis\");\n\n      //       let xAxis = d3.axisBottom(x); //把x刻度丟到下軸生出x軸\n      //       let yAxis = d3\n      //         .axisLeft(y)\n      //         .ticks(5)\n      //         .tickFormat(d => d + \"人\");\n\n      //       const x = d3\n      //         .scaleBand()\n      //         .rangeRound([0, graphWidth])\n      //         .paddingInner(0.3)\n      //         .paddingOuter(0.3);\n      //       const y = d3.scaleLinear().rangeRound([graphHeight, 0]);\n      //       const z = d3.scaleOrdinal(d3.schemeGnBu[9]);\n\n      //       const stack = d3.stack().offset(d3.stackOffsetExpand);\n\n      //       update(this.ratingsCat);\n      // let data=this.ratingsCat;\n      //       series = d3\n      //         .stack()\n      //         .offset(d3.stackOffsetExpand)\n      //         .keys(data.columns.slice(1))(data);\n\n      //       console.log(\"yo\", series);\n\n      // function update(data) {\n      //   // 1.join the data to rects\n      //   let rects = graph.selectAll(\"rect\").data(data);\n\n      //   // 2.updating scale domains\n      //   x.domain(data.map(item => item.cat));\n      //   z.domain(data.columns.slice(1)(data));\n\n      //   // 3.remove exit selection\n      //   rects.exit().remove();\n\n      //   // 4.update current shapes in dom\n      //   rects\n      //     .attr(\"width\", x.bandwidth)\n      //     .attr(\"x\", d => x(d.time))\n      //     .attr(\"y\", d => y(d.member))\n      //     .attr(\"height\", d => graphHeight - y(d.member));\n\n      //   // 5.append the enter selection to the dom\n\n      //   // var serie = graph\n      //   //   .selectAll(\".serie\")\n      //   //   .data(stack.keys(data.columns.slice(1))(data))\n\n      //   //   .enter()\n      //   //   .append(\"g\")\n      //   //   .attr(\"class\", \"serie\")\n      //   //   .attr(\"fill\", function(d) {\n      //   //     return z(d.key);\n      //   //   });\n\n      //   // serie\n      //   //   .selectAll(\"rect\")\n      //   //   .data(function(d) {\n      //   //     return d;\n      //   //   })\n      //   //   .enter()\n      //   //   .append(\"rect\")\n      //   //   .attr(\"x\", function(d) {\n      //   //     return x(d.data.State);\n      //   //   })\n      //   //   .attr(\"y\", function(d) {\n      //   //     return y(d[1]);\n      //   //   })\n      //   //   .attr(\"height\", function(d) {\n      //   //     return y(d[0]) - y(d[1]);\n      //   //   })\n      //   //   .attr(\"width\", x.bandwidth());\n\n      //   // xAxisGroup.call(xAxis);\n      //   // yAxisGroup.call(yAxis);\n      // }\n    },\n    ratingStat() {\n      const dims = {\n        height: 320,\n        width: 320,\n        radius: 150\n      };\n\n      const cent = {\n        x: dims.width / 2 + 5,\n        y: dims.height / 2 + 5\n      };\n\n      //整體的圖形範圍\n      const svg = d3\n        .select(\".rating-graph_all\")\n        .append(\"svg\")\n        .attr(\"width\", dims.width + 150)\n        .attr(\"height\", dims.height + 20);\n\n      const graph = svg\n        .append(\"g\")\n        .attr(\"class\", \"pie-slices\")\n        .attr(\"transform\", `translate(${cent.x},${cent.y})`);\n\n      //製作的圖形種類為圓餅圖，並接收資料來繪製角度\n      const pie = d3\n        .pie()\n        .sort(null) //排序資料\n        .value(d => d.num);\n\n      //定義圓的弧度\n      const arcPath = d3\n        .arc()\n        .outerRadius(dims.radius)\n        .innerRadius(dims.radius / 2);\n\n      //定義圓餅圖的顏色\n      const color = d3.scaleOrdinal(d3.schemeGnBu[9]);\n\n      //legend setup\n      const legendGroup = svg\n        .append(\"g\")\n        .attr(\"class\", \"pie-legends\")\n        .attr(\"transform\", `translate(${dims.width + 40},100)`);\n\n      const legend = d3\n        .legendColor()\n        .shape(\"square\")\n        .shapePadding(10)\n        .scale(color);\n\n      const tip = d3\n        .tip()\n        .attr(\"class\", \"tooltip\")\n        .html(d => {\n          let content = `<div class=\"name\">${d.data.rating}</div>`;\n          content += `<div class=\"cost\">${d.data.num} 人</div>`;\n          return content;\n        });\n\n      graph.call(tip);\n\n      update(this.ratingsAll);\n      //update function\n      function update(data) {\n        //update color scale domain\n\n        color.domain(data.map(item => item.rating));\n\n        //update and call legend\n        legendGroup.call(legend);\n        legendGroup.selectAll(\"text\").attr(\"fill\", \"#707070\");\n\n        //join enhance (pie) data to path element\n\n        const paths = graph.selectAll(\"path\").data(pie(data));\n\n        //handle the exit selection\n        paths\n          .exit()\n          // .transition()\n          // .duration(750)\n          // .attrTween(\"d\", arcTweenExit)\n          .remove();\n\n        //直接刪除的話圓餅圖會缺一塊，因此再讀一次資料讓它重畫\n        paths.attr(\"d\", arcPath);\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenUpdate);\n\n        //handle the current DOM path updates\n        paths\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", \"pie-arc\")\n          .attr(\"d\", arcPath) //path string，svg 的 <path> 標籤可以繪製任何圖形，其中的 d 為圖形的路徑\n          .attr(\"stroke\", \"#fff\") //路徑線的顏色\n          .attr(\"stroke-width\", 3) //路徑線的寬度\n          .attr(\"fill\", d => color(d.data.rating));\n        // .each(function(d) {\n        //   this._current = d;\n        // })\n        // .transition()\n        // .duration(750)\n        // .attrTween(\"d\", arcTweenEnter);\n\n        //add Events\n        graph\n          .selectAll(\"path\")\n          .on(\"mouseover\", function(d, i, n) {\n            arcPath.outerRadius(dims.radius + 10);\n            d3.select(this)\n              .transition()\n              .duration(250)\n              .attr(\"d\", arcPath);\n            tip.show(d, n[i]);\n            tip\n              .style(\"top\", d3.event.pageY + 16 + \"px\")\n              .style(\"left\", d3.event.pageX + 16 + \"px\");\n          })\n          .on(\"mouseout\", function(d, i, n) {\n            arcPath.outerRadius(dims.radius);\n            d3.select(this)\n              .transition()\n              .duration(250)\n              .attr(\"d\", arcPath);\n            tip.hide(d, n[i]);\n          });\n      }\n    }\n  }\n};\n</script>"]}]}