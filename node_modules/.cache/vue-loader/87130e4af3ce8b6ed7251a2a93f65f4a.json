{"remainingRequest":"/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangpei-yu/Front-Gym/src/views/backend/CoursesAdmin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangpei-yu/Front-Gym/src/views/backend/CoursesAdmin.vue","mtime":1584965807537},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangpei-yu/Front-Gym/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pagination from '@/components/Pagination';\n\nexport default {\n  name: 'CoursesAdmin',\n  components: { Pagination },\n  computed: {\n    isLoading() {\n      return this.$store.state.isLoading;\n    },\n    textCounter() {\n      return this.course.title;\n    },\n    courses() {\n      return this.$store.state.courses.courses;\n    },\n  },\n  methods: {\n    deleteCourse(title, id) {\n      this.$modal.show('dialog', {\n        title: `⚠️ 確定刪除 ${title} 嗎？`,\n        text: '課程一旦刪除將無法復原 😱😱😱',\n        buttons: [\n          {\n            title: '確定',\n            handler: () => {\n              this.$store.dispatch('courses/removeCourse', id).then(() => {\n                this.$toasted.success(`成功刪除 ${title}`, {\n                  duration: 2000,\n                });\n                this.$modal.hide('dialog');\n              });\n            },\n          },\n          {\n            title: '取消',\n          },\n        ],\n      });\n    },\n\n    addCourse() {\n      this.$store\n        .dispatch('courses/createCourse', { ...this.course })\n        .then(() => {\n          this.$toasted.success('成功新增課程', {\n            duration: 2000,\n          });\n        });\n    },\n\n    updateCourse(id) {\n      this.$store\n        .dispatch('courses/updateCourse', { id, course: this.course })\n        .then(() => {\n          this.$toasted.success('更新成功!!', {\n            duration: 2000,\n          });\n        });\n    },\n    // 編輯/新增課程\n    turnNewEditPage(status, course) {\n      this.$store.commit('courses/setStatus', status);\n      if (status === '編輯課程') {\n        this.$store.commit('courses/setCourse', course);\n      } else {\n        this.$store.commit('courses/setCourse', {});\n      }\n      this.$router.push({ name: 'courseNewEdit' });\n    },\n  },\n\n  created() {\n    this.$store.dispatch('courses/getCoursesLimit');\n    this.$store.dispatch('courses/getPageLength');\n  },\n};\n",{"version":3,"sources":["CoursesAdmin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CoursesAdmin.vue","sourceRoot":"src/views/backend","sourcesContent":["<template>\n  <div>\n    <loading\n      :active.sync=\"isLoading\"\n      :opacity=\"0.8\"\n      :background-color=\"'#000'\"\n      :color=\"'#ff5722'\"\n    ></loading>\n    <h2 class=\"heading-secondary\">課程列表</h2>\n    <button @click=\"turnNewEditPage('新增課程')\" class=\"btn admin-btn\">\n      <i class=\"fas fa-plus-square\"></i> 新增課程\n    </button>\n\n    <table class=\"admin-table\">\n      <thead>\n        <tr>\n          <th class=\"d-none-phone\">圖示</th>\n          <th class=\"d-none-phone\">類別</th>\n          <th>課程名稱</th>\n          <th class=\"d-none-phone\">精選</th>\n          <th>剩餘數量</th>\n          <th class=\"d-none-tab-p\">原價</th>\n          <th>售價</th>\n          <th>編輯</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr\n          v-for=\"(course, index) in courses\"\n          :class=\"{ 'lighten-row': index % 2 == 1 }\"\n          :key=\"course.id\"\n        >\n          <td class=\"d-none-phone\">\n            <img\n              class=\"course-admin__img\"\n              :src=\"course.imageUrl\"\n              :alt=\"course.title\"\n            />\n          </td>\n          <td class=\"d-none-phone\">{{ course.categorySelected }}</td>\n          <td style=\"text-align:left;padding-left:20px\">\n            <router-link\n              :to=\"{ name: 'CourseDetails', params: { course_id: course.id } }\"\n              >{{ course.title }}</router-link\n            >\n          </td>\n\n          <td class=\"d-none-phone\">\n            <div v-if=\"course.discount\">V</div>\n            <div v-else>-</div>\n          </td>\n\n          <td :class=\"{ 'text-highlight': course.remainQuantity === 0 }\">\n            {{ course.remainQuantity }}/{{ course.quantity }}\n          </td>\n          <td class=\"d-none-tab-p\">{{ course.originPrice | currency }}</td>\n          <td>{{ course.price | currency }}</td>\n          <td>\n            <button\n              @click=\"turnNewEditPage('編輯課程', course)\"\n              class=\"btn admin-btn\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button\n              class=\"btn admin-btn\"\n              @click=\"deleteCourse(course.title, course.id)\"\n            >\n              <i class=\"fas fa-trash-alt\"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <Pagination></Pagination>\n    <v-dialog />\n  </div>\n</template>\n\n<script>\nimport Pagination from '@/components/Pagination';\n\nexport default {\n  name: 'CoursesAdmin',\n  components: { Pagination },\n  computed: {\n    isLoading() {\n      return this.$store.state.isLoading;\n    },\n    textCounter() {\n      return this.course.title;\n    },\n    courses() {\n      return this.$store.state.courses.courses;\n    },\n  },\n  methods: {\n    deleteCourse(title, id) {\n      this.$modal.show('dialog', {\n        title: `⚠️ 確定刪除 ${title} 嗎？`,\n        text: '課程一旦刪除將無法復原 😱😱😱',\n        buttons: [\n          {\n            title: '確定',\n            handler: () => {\n              this.$store.dispatch('courses/removeCourse', id).then(() => {\n                this.$toasted.success(`成功刪除 ${title}`, {\n                  duration: 2000,\n                });\n                this.$modal.hide('dialog');\n              });\n            },\n          },\n          {\n            title: '取消',\n          },\n        ],\n      });\n    },\n\n    addCourse() {\n      this.$store\n        .dispatch('courses/createCourse', { ...this.course })\n        .then(() => {\n          this.$toasted.success('成功新增課程', {\n            duration: 2000,\n          });\n        });\n    },\n\n    updateCourse(id) {\n      this.$store\n        .dispatch('courses/updateCourse', { id, course: this.course })\n        .then(() => {\n          this.$toasted.success('更新成功!!', {\n            duration: 2000,\n          });\n        });\n    },\n    // 編輯/新增課程\n    turnNewEditPage(status, course) {\n      this.$store.commit('courses/setStatus', status);\n      if (status === '編輯課程') {\n        this.$store.commit('courses/setCourse', course);\n      } else {\n        this.$store.commit('courses/setCourse', {});\n      }\n      this.$router.push({ name: 'courseNewEdit' });\n    },\n  },\n\n  created() {\n    this.$store.dispatch('courses/getCoursesLimit');\n    this.$store.dispatch('courses/getPageLength');\n  },\n};\n</script>\n\n<style>\n#editor {\n  height: 250px;\n}\n</style>\n"]}]}